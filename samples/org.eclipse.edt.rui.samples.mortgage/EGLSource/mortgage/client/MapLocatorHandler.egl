/*******************************************************************************
 * Copyright Â© 2008, 2013 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/

package mortgage.client;

import org.eclipse.edt.rui.widgets.Box;
import org.eclipse.edt.rui.widgets.GridLayout;
import org.eclipse.edt.rui.widgets.GridLayoutData;
import org.eclipse.edt.rui.widgets.GridLayoutLib;
import org.eclipse.edt.rui.widgets.HyperLink;
import org.eclipse.edt.rui.widgets.TextField;
import org.eclipse.edt.rui.widgets.TextLabel;
import dojo.widgets.DojoButton;
import dojo.widgets.DojoDialogLib;
import eglx.http.HttpRest;
import eglx.lang.AnyException;
import eglx.ui.rui.Event;
import eglx.ui.rui.RUIHandler;
import libraries.YahooServiceLib;
import mortgage.common.ResultSet;
import utils.map.GoogleMap;
import utils.map.MapMarker;

handler MapLocatorHandler type RUIhandler{initialUI =[ui
            ], onConstructionFunction = start, cssFile = "css/Mortgage.css", title = "MapLocatorHandler"}

    ui GridLayout{columns = 3, rows = 3, cellPadding = 4, children =[localMap,
                    listingBox, zipButton, zipLabel, zipField, introLabel]};
    introLabel TextLabel{layoutData = new GridLayoutData{row = 1, column = 1, horizontalSpan = 3}, text = "Search for local mortgage businesses"};
    zipField TextField{layoutData = new GridLayoutData{row = 2, column = 2, horizontalSpan = 1}, width = "100", onFocusLost ::= checkForEnter};
    zipLabel TextLabel{layoutData = new GridLayoutData{row = 2, column = 1}, text = "Zip code:"};
    zipButton DojoButton{layoutData = new GridLayoutData{row = 2, column = 3}, text = "Search", onClick ::= buttonClicked};
    listingBox Box{layoutData = new GridLayoutData{row = 3, column = 1, horizontalSpan = 2, verticalAlignment = GridLayoutLib.VALIGN_TOP}, padding = 8, columns = 1, width = "150"};
    localMap GoogleMap{layoutData = new GridLayoutData{row = 3, column = 3}, width = 400, height = 400, zoom = 13};

    function start()
    end

    function checkForEnter(event Event in)
        if(event.ch == 13)
            search();
        end
    end

    function buttonClicked(event Event in)
        search();
    end

    function search()
        localMap.zoom = 13;
        // show an initial marker, as necessary to display the map at all
        // (the marker identifies only the zip code)
        //localMap.addMarker(new MapMarker{address = zipField.text, description = "zipcode: " + zipField.text});
        // Call the remote Yahoo! service, passing the zip code
        call YahooServiceLib.getSearchResults("YahooDemo", zipField.text) using new HttpRest
                returning to showResults onException displayError;
    end

    function showResults(retResult ResultSet in)
        linkListing HyperLink[] = new HyperLink[0];
        for(i int from 1 to retResult.result.getSize() by 1)
            newLink HyperLink{padding = 4, text = retResult.result[i].title, href = "#"};
            newLink.setAttribute("address", retResult.result[i].Address +
                            ", " + retResult.result[i].city + ", " +
                            retResult.result[i].state);
            newLink.setAttribute("title", retResult.result[i].Title);
            newLink.onClick ::= mapAddress;
            linkListing.appendElement(newLink);
        end
        listingBox.setChildren(linkListing);
    end

    function mapAddress(e Event in)
    	// Show the marker when the user clicks the link
        businessAddress string = e.widget.getAttribute("address") as string;
        businessName string = e.widget.getAttribute("title") as string;
        localMap.addMarker(new MapMarker{address = businessAddress, description = businessName});
    end

    function displayError(ex AnyException in)
        DojoDialogLib.showError("Yahoo Service", "Cannot invoke Yahoo Local Service: " + ex.message, null);
    end
end
