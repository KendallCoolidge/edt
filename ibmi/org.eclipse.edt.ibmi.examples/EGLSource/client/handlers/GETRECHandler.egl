package client.handlers;

import org.eclipse.edt.rui.infobus.infobus;
import common.CUST;
import common.ServiceInfoRecord;
import common.ServiceLocation;
import common.constants;
import eglx.lang.dictionary;
import server.GETREC;

// basic library
handler GETRECHandler 
	
	private httpSession1 IHttp?;
	
	function init()
    	InfoBus.subscribe(Constants.INFOBUS_EVENT_SERVERINFO, initHttp);
	end
	
    function initHttp(eventName string in, dataObject any in)
		if(dataObject isa ServiceInfoRecord)
			case((dataObject as ServiceInfoRecord).serviceType)
				when(ServiceLocation.jetty)
					httpSession1 = SysLib.getResource("binding:GETRECServiceWorkspace");
				when(ServiceLocation.rest)
					httpSession1 = SysLib.getResource("binding:GETRECService");
					if((dataObject as ServiceInfoRecord).serverAddress.length() > 0)
						httpSession1.getRequest().uri = (dataObject as ServiceInfoRecord).serverAddress + httpSession1.getRequest().uri;
					end
				otherwise
					httpSession1 = new HttpProxy();
			end	
		else
			httpSession1 = new HttpProxy();
		end
		SysLib.writeStdout("Service URL:" + httpSession1.getRequest().uri);
	end
	
    function getCusts() 
    	call GETREC.getCustomers() using httpSession1 returning to handleCustomersResponse onException handleException;
    end
    
    function handleCustomersResponse(retResult CUST[] in, http IHttp)
    	//process the response headers to handle the Session ID
    	CookieSession.processResponseHeadersSession(http.getResponse(), httpSession1);
    	//call back to the handller to handle the new data
    	InfoBus.publish(Constants.INFOBUS_EVENT_CUSTS, retResult);
    end
    
    function killSession() 
    	call GETREC.killSession() using httpSession1 returning to handleKillSessionResponse onException handleException;
    end
    
    function handleKillSessionResponse()
    	custs CUST[];
    	InfoBus.publish(Constants.INFOBUS_EVENT_CUSTS, custs);
    end
    
	function handleException(exp AnyException in, http IHTTP)
		exceptionDisplay ExceptionDisplay{
			ExceptionField.text = exp.message,
			RawRequestField.text = http.getRequest().body,
			RawResponseField.text = http.getResponse().body
		};
		if(exp isa ServiceInvocationException)
			exceptionDisplay.Detail1Field.text = (exp as ServiceInvocationException).detail1;
			exceptionDisplay.Detail2Field.text = (exp as ServiceInvocationException).detail2;
			exceptionDisplay.Detail3Field.text = (exp as ServiceInvocationException).detail3;
		end
    	InfoBus.publish(Constants.INFOBUS_EVENT_SERVICEINVOCATIONEXCEPTION, exceptionDisplay);
    end
	
end


