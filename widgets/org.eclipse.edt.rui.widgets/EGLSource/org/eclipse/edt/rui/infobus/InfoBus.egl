/*******************************************************************************
 * Copyright Â© 2011, 2013 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package org.eclipse.edt.rui.infobus;
 
Delegate 
	InfoBusCallback(eventName String in, dataObject any in)
end

//
// A publish/subscribe architecture 
//

library InfoBus  { }
   
   	bridge OpenAjaxHubBridge {};
   	
	//
	// name			the name of the event to listen for. You can use dots and wildcards "*". 
	// callback		the function to call when the event is published by anyone 
	//   
    function subscribe(name String in, callback InfoBusCallback) returns(any)
    	//TODO: 356080
    	return (bridge.subscribe(name, callback));
    end
    
	//
	// subscription	the subscription to cancel
	//   
    function unsubscribe(subscription any in)
    	bridge.unsubscribe(subscription);
    end

	//
	// name			the name of the event to publish. You can use dots.
	// data			the data that should be passed to all subscribers
	//   	
    function publish(name String in, data any in)
    	bridge.publish(name, data);
    end

end
