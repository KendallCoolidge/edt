/*******************************************************************************
 * Copyright Â© 2011 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package org.eclipse.edt.rui.widgets;

library DataGridBehaviors

	function whiteCells(grid DataGrid in, td Widget in, row any? in, dataIndex int in, column DataGridColumn in) 
		td.class = td.class + " EglRuiDataGridCellColor2";
	end
	
	function grayCells(grid DataGrid in, td Widget in, row any? in, dataIndex int in, column DataGridColumn in) 
		td.class = td.class + " EglRuiDataGridCellColor1";
	end
	
	function alternatingColor(grid DataGrid in, td Widget in, row any? in, dataIndex int in, column DataGridColumn in) 
		if (dataIndex % 2 == 1)
			td.class = td.class + " EglRuiDataGridCellColor3";
		end
	end
	
	function tightCells(grid DataGrid in, td Widget in, row any? in, dataIndex int in, column DataGridColumn in) 
		td.class = td.class + " EglRuiDataGridCellTight";
	end
		
	function getColumn(td Widget in) returns(DataGridColumn?)
		tr Widget = td.parent;
		grid DataGrid = td.logicalParent;
		cells Widget[] = tr.children;
		for (n int from 1 to cells.getSize() by 1)
			if (cells[n] == td)
				return (grid.columns[n]);  
			end
		end
		return (null);
	end
	
	function hasParent(widget Widget in, target Widget in) returns(boolean)
		while (widget != null && (widget != target))
			widget = widget.parent;
		end
		return (widget == target);
	end
	
end
	
