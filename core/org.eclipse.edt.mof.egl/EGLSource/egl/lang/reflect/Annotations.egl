/*******************************************************************************
 * Copyright Â© 2011 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package egl.lang.reflect;

// This annotation should be able to be placed on the subtype
// value itself rather than the part but the system is not
// allowing this at this point (targets = [ElementKind.AnnotationValue])
// If allowed it would be possible to put this annotation both on
// the part and the subtype instance.  Instead a separate AnnotationType
// is used. See IsEMetadataType
Record PartType type Annotation {
	targets = [ElementKind.RecordPart],
	@IsEMetadataType
}
	value string;
end

Record IsEMetadataType type Annotation {
	targets = [ElementKind.RecordPart]
}
	value boolean = true;
end

Record ProxyType type Annotation {
	targets=[ElementKind.Part],
	@IsEMetadataType
}
	value InternalRef;
end

Record DefaultSuperType type Annotation {
	targets=[ElementKind.RecordPart, ElementKind.ExternalTypePart],
	@IsEMetadataType
}
	value TypeRef;
end

Record Interfaces type Annotation {
	targets=[ElementKind.RecordPart, ElementKind.ExternalTypePart],
	@IsEMetadataType
}
	value TypeRef[];
end


