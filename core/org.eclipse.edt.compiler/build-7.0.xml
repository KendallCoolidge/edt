<project name="BuildPlugin" default="Zip" basedir=".">

<property name="pluginName" value="org.eclipse.edt.compiler.core"/>

<target name="init">    
    <echo message="processing ${pluginName}." />
	<!-- <echo message="Performing init and cleanup." /> -->
	<!--******************************************************-->
	<!--Edit this properties for type of export.-->
	<property name="tempDir" value="\builds\antbuilds"/>
	<property name="exportSource" value="true"/>
	<!-- change exportBinary to true to produce runtime jar. Leave it false for normal drops to build -->
	<property name="exportBinary" value="false"/>
	<!--******************************************************-->

	<property name="pluginName.temp.path"	value="${tempDir}/${pluginName}/plugins/${pluginName}"/>
	<!-- Clean the Directory Just in Case -->
	<delete dir="${tempDir}/${pluginName}"/>
</target>

<target name="Copy" depends="init">
	<echo message="Performing copy." />
	<copy todir="${pluginName.temp.path}">
		<fileset dir="../${pluginName}" excludes="bin/, .project, .classpath, .cvsignore, build.xml, build/pznbuild.xml" />
	</copy>
<!--	<exportJar project="${pluginName}" exportSource="${exportSource}" exportBinary="${exportBinary}" jarLocation="${pluginName.temp.path}"/> -->
	<!--
	The exclude attribute is an optional attribute of the copyResources tag.
	Its value serves as a input to the filelist of a fileset, which can be
	a list of file specs, separated by commas. To exclude a whole
	directory, simply follow its name with the directory separator '\'. (Likely
	to work only when doing drops from Windows.) All filespecs are relative to the
	plugin's "root" location.
		 Examples:
		 	exclude the whole DevTimeSupport directory
		 		exclude="DevTimeSupport\"
			exclude the whole DevTimeSupport directory and the doc.properties file
		 exclude="DevTimeSupport\,doc.properties"
	-->
<!--	<copyResources project="${pluginName}" toDir="${pluginName.temp.path}" exclude="DevTimeSupport\, doc.properties"/> -->

</target>

<target name="zipNLTask">
	<ant antfile="../${pluginName}.nl1/build.xml" target="CreateZip"/>
</target>

<target name="Zip" depends="Copy">
	<echo message="Performing zip." />

	<zip basedir="${tempDir}/${pluginName}" zipfile="${tempDir}/${pluginName}-${creation.time}.zip" />
</target>

<target name="zipBothTask">
	<antcall target="CreateZip"/>
	<antcall target="zipNLTask"/>
</target>

</project>
