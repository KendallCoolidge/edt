/*******************************************************************************
 * Copyright © 2010 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package egl.ui.jsf;

import egl.ui.BidiTypeKind;

Record Action type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglIsSystemAnnotation = yes
}
	value string;
end

Record BypassValidation type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record DisplayUse type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglIsSystemAnnotation = yes
}
	value DisplayUseKind;
end

Record OnValueChangeFunction type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.OnValueChangeFunctionAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.FunctionRef;
end

Record TypeaheadFunction type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.TypeaheadFunctionAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.FunctionRef;
end

Record Typeahead type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.TypeaheadAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end


Record NewWindow type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record SelectFromListItem type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.SelectFromListItemAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.InternalRef;
end

Record SelectType type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.SelectTypeAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	value SelectTypeKind;
end

Record BidiType type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglIsSystemAnnotation = yes
}
	value BidiTypeKind;
end


