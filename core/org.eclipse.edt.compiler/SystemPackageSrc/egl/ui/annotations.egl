/*******************************************************************************
 * Copyright Â© 2011 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package egl.ui;

Record Align type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value AlignKind;
end

Record Color type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.openUIStatement,
		ElementKind.dataItemPart
	],
	IsFormFieldArrayProperty = yes,
	eglAnnotationGroup = "fieldPresentation",
	eglIsSystemAnnotation = yes
}
	value ColorKind;
end

Record Columns type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr
	],
	eglIsSystemAnnotation = yes
}
	value int;
end

Record Currency type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.CurrencyAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record CurrencySymbol type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.CurrencySymbolAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value string;
end

Record DateFormat type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.DateFormatAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglSpecificValues=["isoDateFormat", "usaDateFormat", "eurDateFormat", "jisDateFormat", "defaultDateFormat", "systemGregorianDateFormat", "systemJulianDateFormat"],
	eglIsSystemAnnotation = yes
}
	value string;
end

Record DisplayName type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "ui",
	eglIsBIDIEnabled = yes,
	eglIsSystemAnnotation = yes
}
	value string;
end

Record FieldLen type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.FieldLenAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	value int;
end

Record Fill type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record FillCharacter type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.FillCharacterAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglSpecificValues=["nullFill"],
	eglIsSystemAnnotation = yes
}
	value string;
end

Record Help type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.openUIStatement,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "ui",
	eglValueCanBeExpressionForOpenUI=yes,
	eglIsSystemAnnotation = yes
}
	value string;
end

Record HelpKey type Annotation
{
	targets = [
		ElementKind.OpenUIStatement,
		ElementKind.fieldMbr,
		ElementKind.formGroupPart,
		ElementKind.formGroupUse],
	eglIsSystemAnnotation = yes
}
	value PFKeyKind;
end

Record Highlight type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.openUIStatement,
		ElementKind.dataItemPart
	],
	IsFormFieldArrayProperty = yes,
	eglAnnotationGroup = "fieldPresentation",
	eglIsSystemAnnotation = yes
}

	value HighlightKind;
end

Record InputRequired type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record InputRequiredMsgKey type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value string;
end

Record ValidationPropertiesLibrary type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.InternalRef;
end

Record Intensity type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.openUIStatement,
		ElementKind.dataItemPart
	],
	IsFormFieldArrayProperty = yes,
	eglAnnotationGroup = "fieldPresentation",
	eglIsSystemAnnotation = yes
}
	value IntensityKind;
end

Record IsBoolean type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.IsBooleanAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record IsDecimalDigit type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.IsDecimalDigitAnnotationTypeBinding",
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record IsHexDigit type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.IsHexDigitAnnotationTypeBinding",
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record LinesBetweenRows type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr
	],
	eglIsSystemAnnotation = yes
}
	value int;
end

Record LowerCase type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.LowerCaseAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record Masked type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record MinimumInput type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.MinimumInputAnnotationTypeBinding",
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value int;
end

Record MinimumInputMsgKey type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value string;
end

Record NeedsSOSI type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.NeedsSOSIAnnotationTypeBinding",
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record NumElementsItem type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "ui",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.InternalRef;
end

Record NumericSeparator type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.NumericSeparatorAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record Pattern type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value string;
end

Record Position type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.formPart
	],
	IsFormFieldArrayProperty = yes,
	eglIsSystemAnnotation = yes
}
	value int[2];
end

Record Bounds type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr
	],
	IsFormFieldArrayProperty = yes,
	eglIsSystemAnnotation = yes
}
	value int[4];
end

Record RunValidatorFromProgram type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "ui",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record SelectedIndexItem type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "ui",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.InternalRef;
end

Record SelectedRowItem type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.SelectedRowItemAnnotationTypeBinding",
	eglAnnotationGroup = "ui",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.FieldRef;
end

Record SelectedValueItem type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart,
		ElementKind.dataTableUse
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.SelectedValueItemAnnotationTypeBinding",
	eglAnnotationGroup = "ui",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.FieldRef;
end

Record SelectionList type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart,
		ElementKind.recordPart,
		ElementKind.structuredRecordPart,
		ElementKind.dataTablePart,
		ElementKind.dataTableUse
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.SelectionListAnnotationTypeBinding",
	eglAnnotationGroup = "ui",
	eglIsSystemAnnotation = yes
}
	labelItem egl.core.reflect.FieldInTargetRef;
	valueItem egl.core.reflect.FieldInTargetRef;
end

Record Sign type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.SignAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value SignKind;
end

Record SpacesBetweenColumns type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr
	],
	eglIsSystemAnnotation = yes
}
	value int;
end

Record TimeFormat type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.TimeFormatAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglSpecificValues=["isoTimeFormat", "usaTimeFormat", "eurTimeFormat", "jisTimeFormat", "defaultTimeFormat"],
	eglIsSystemAnnotation = yes
}
	value string;
end

Record TimestampFormat type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.TimeStampFormatAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglSpecificValues=["db2TimestampFormat", "odbcTimestampFormat", "defaultTimestampFormat"],
	eglIsSystemAnnotation = yes
}
	value string;
end

Record TypeChkMsgKey type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value string;
end

Record UpperCase type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.UpperCaseAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record ValidValues type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.ValidValuesAnnotationTypeBinding",
	eglAnnotationGroup = "validation",
	eglIsBIDIEnabled = yes,
	eglIsSystemAnnotation = yes
}
	value any[];
end

Record ValidValuesMsgKey type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value string;
end

Record ValidationOrder type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "ui",
	eglIsSystemAnnotation = yes
}
	value int;
end

Record ValidatorDataTable type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.InternalRef;
end

Record ValidatorDataTableMsgKey type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value string;
end

Record ValidatorFunction type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.ValidatorFunctionAnnotationTypeBinding",
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value egl.core.reflect.InternalRef;
end

Record ValidatorFunctionMsgKey type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	eglAnnotationGroup = "validation",
	eglIsSystemAnnotation = yes
}
	value string;
end

Record Value type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	IsFormFieldArrayProperty = yes,
	eglIsBIDIEnabled = yes,	
	eglIsSystemAnnotation = yes
}
	value any;
end

Record ZeroFormat type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.structuredFieldMbr,
		ElementKind.dataItemPart
	],
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.ZeroFormatAnnotationTypeBinding",
	eglAnnotationGroup = "formatting",
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record Orientation type Annotation
{
	targets = [
		ElementKind.fieldMbr,
		ElementKind.dataItemPart,
		ElementKind.formGroupPart
	],
	eglIsSystemAnnotation = yes
}
	value OrientationKind;
end

Record BidiInput type Annotation
{
	targets = [
		ElementKind.formGroupPart,
		ElementKind.fieldMbr
	],
	eglIsSystemAnnotation = yes
}
	value BidiTypeKind;
end

Record NumericSwapping type Annotation
{
	targets = [
		ElementKind.formGroupPart,
		ElementKind.fieldMbr
	],
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end

Record SymmetricSwapping type Annotation
{
	targets = [
		ElementKind.formGroupPart,
		ElementKind.fieldMbr
	],
	eglIsSystemAnnotation = yes
}
	value boolean = yes;
end
