/*******************************************************************************
 * Copyright Â© 2011 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package egl.core;

import egl.lang.FieldDeclaration;
import egl.idl.java.EventListener;

Record BasicHandler type Annotation
{
	targets = [ElementKind.handlerPart],
	@Stereotype,
	eglIsSystemAnnotation = yes
}
end

Record BasicLibrary type Annotation
{
	targets = [ElementKind.libraryPart],
	@Stereotype,
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.BasicLibraryAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	msgTablePrefix string;
	enableSaveRestore boolean;
end

Record BasicProgram type Annotation
{
	targets = [ElementKind.programPart],
	@Stereotype,
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.BasicProgramAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	inputRecord egl.core.reflect.InternalRef;
	msgTablePrefix string;
	unloadOnExit boolean;
end

Record BasicRecord type Annotation
{
	targets = [ElementKind.recordPart, ElementKind.structuredRecordPart],
	@Stereotype,
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.BasicRecordAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
end

Record BasicTable type Annotation
{
	targets = [ElementKind.dataTablePart],
	@Stereotype,
	eglIsSystemAnnotation = yes
}
	contents any[][];
	shared boolean;
	resident boolean;
end

Record Exception type Annotation
{
	targets = [ElementKind.recordPart],
	@Stereotype {
		referenceType = yes
	},	
	implicitFields = [
		@FieldDeclaration {
			fieldName = "messageID",
			fieldType = string.type
		},
		@FieldDeclaration {
			fieldName = "message",
			fieldType = string.type
		}
	],
	eglIsSystemAnnotation = yes
}
	msgKey char(8);
end

Record MatchInvalidTable type Annotation
{
	targets = [ElementKind.dataTablePart],
	@Stereotype,
	eglIsSystemAnnotation = yes
}
	contents any[][];
	shared boolean;
	resident boolean;
end

Record MatchValidTable type Annotation
{
	targets = [ElementKind.dataTablePart],
	@Stereotype,
	eglIsSystemAnnotation = yes
}
	contents any[][];
	shared boolean;
	resident boolean;
end

Record MsgTable type Annotation
{
	targets = [ElementKind.dataTablePart],
	@Stereotype,
	eglIsSystemAnnotation = yes
}
	contents any[][];
	shared boolean;
	resident boolean;
end

Record RangeChkTable type Annotation
{
	targets = [ElementKind.dataTablePart],
	@Stereotype,
	eglIsSystemAnnotation = yes
}
	contents any[][];
	shared boolean;
	resident boolean;
end

Record NativeLibrary type Annotation
{
	targets = [ElementKind.libraryPart],
	@Stereotype,
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.NativeLibraryAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	callingConvention CallingConventionKind;
	dllName string;
	msgTablePrefix string;
end

Record NativeType type Annotation { 
	targets = [ElementKind.ExternalTypePart],

	@Stereotype { memberAnnotations = [EventListener] },
	eglIsSystemAnnotation = yes
	//validationProxy = "org.eclipse.edt.compiler.binding.annotationType.NativeTypeAnnotationTypeBinding"
}
end
