/*******************************************************************************
 * Copyright © 2010 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package egl.core;

library SysLib
{
	eglIsSystemPart = yes
}
	currentException egl.core.dictionary {eglSystemConstant = 790};

	function audit(aRecord int in, jid int in)
		{eglSystemConstant = 103, eglSystemParameterTypes = ["record", ""], eglValidNumberOfArguments = [1, 2]}
	end
	
	function bytes(arg any in) returns(int)
		{eglSystemConstant = 139}
	end
	
	function calculateChkDigitMod10(input char, length int in, result smallint) {eglSystemConstant = 82} end
	function calculateChkDigitMod10(input num, length int in, result smallint) {eglSystemConstant = 82} end

	function calculateChkDigitMod11(input char, length int in, result smallint) {eglSystemConstant = 121} end
	function calculateChkDigitMod11(input num, length int in, result smallint) {eglSystemConstant = 121} end

	function callCmd(commandString string in, modeString string in)
		{eglSystemConstant = 208, eglValidNumberOfArguments = [1, 2]}
	end

	function conditionAsInt(condition boolean in) returns(smallint)
		{eglSystemConstant = 129}
	end
	
	function convert(target any in) {eglSystemConstant = 137} end
	function convert(target any in, direction ConvertDirection in) {eglSystemConstant = 137} end
	function convert(target any in, direction ConvertDirection in, conversionTable string in) {eglSystemConstant = 137} end
	
	function convertBidi(target any in, direction ConvertDirection in, conversionTable string in) {eglSystemConstant = 131} end
	
	function convertEncodedTextToString(chars char inout, encoding string in) returns (string) {eglSystemConstant = 530} end
	function convertEncodedTextToString(dbs dbchar inout, encoding string in) returns (string) {eglSystemConstant = 530} end
	function convertEncodedTextToString(mbs mbchar inout, encoding string in) returns (string) {eglSystemConstant = 530} end
	
	function convertNumberToUnicodeNum(numericField smallint in, unicodeField unicode out) {eglSystemConstant = 194} end
	function convertNumberToUnicodeNum(numericField int in, unicodeField unicode out) {eglSystemConstant = 194} end
	function convertNumberToUnicodeNum(numericField bigint in, unicodeField unicode out) {eglSystemConstant = 194} end
	function convertNumberToUnicodeNum(numericField decimal in, unicodeField unicode out) {eglSystemConstant = 194} end
	
	function convertNumberToUnsignedUnicodeNum(numericField smallint in, unicodeField unicode out) {eglSystemConstant = 192} end
	function convertNumberToUnsignedUnicodeNum(numericField int in, unicodeField unicode out) {eglSystemConstant = 192} end
	function convertNumberToUnsignedUnicodeNum(numericField bigint in, unicodeField unicode out) {eglSystemConstant = 192} end
	function convertNumberToUnsignedUnicodeNum(numericField decimal in, unicodeField unicode out) {eglSystemConstant = 192} end

	function convertStringToEncodedText(str string in, encoding string in, target char inout) {eglSystemConstant = 531} end
	function convertStringToEncodedText(str string in, encoding string in, target dbchar inout) {eglSystemConstant = 531} end
	function convertStringToEncodedText(str string in, encoding string in, target mbchar inout) {eglSystemConstant = 531} end

	function convertUnicodeNumToNumber(unicodeField unicode in, numericField smallint out) {eglSystemConstant = 195} end
	function convertUnicodeNumToNumber(unicodeField unicode in, numericField int out) {eglSystemConstant = 195} end
	function convertUnicodeNumToNumber(unicodeField unicode in, numericField bigint out) {eglSystemConstant = 195} end
	function convertUnicodeNumToNumber(unicodeField unicode in, numericField decimal out) {eglSystemConstant = 195} end
	
	function convertUnsignedUnicodeNumToNumber(unicodeField unicode in, numericField smallint out) {eglSystemConstant = 193} end
	function convertUnsignedUnicodeNumToNumber(unicodeField unicode in, numericField int out) {eglSystemConstant = 193} end
	function convertUnsignedUnicodeNumToNumber(unicodeField unicode in, numericField bigint out) {eglSystemConstant = 193} end
	function convertUnsignedUnicodeNumToNumber(unicodeField unicode in, numericField decimal out) {eglSystemConstant = 193} end

	function commit()
		{eglSystemConstant = 73}
	end

	function errorLog(errorMessage string in)
		{eglSystemConstant = 441}
	end

	function getCmdLineArgCount() returns(int)
		{eglSystemConstant = 210}
	end

	function getCmdLineArg(index int in) returns(string)
		{eglSystemConstant = 211}
	end

	function getMessage(key string in, inserts string[] in) returns(string?)
		{eglSystemConstant = 128, eglValidNumberOfArguments = [1, 2]}
	end

	function getProperty(textVariableOrLiteral string in) returns(string?)
		{eglSystemConstant = 216}
	end

	function maximumSize(dynamicArray any[] in) returns(int)
		{eglSystemConstant = 124}
	end

	function purge(queueName string in)
		{eglSystemConstant = 95}
	end

	function rollback()
		{eglSystemConstant = 96}
	end
	
	function setError(obj any in, msgID string in, inserts string in) {eglSystemConstant = 100, eglValidNumberOfArguments = [-1, 1]} end
	function setError(msg string in) {eglSystemConstant = 100} end
	
	function setErrorForComponentId(componentId string in, msgKey string in, inserts string in)
		{eglSystemConstant = 142, eglValidNumberOfArguments = [-1, 2]}
	end
	
	function setLocale(languageCode char(2) in, countryCode char(2) in, variant char(2) in)
		{eglSystemConstant = 101, eglValidNumberOfArguments = [2, 3]}
	end

	function setRemoteUser(userid string in, password string in)
		{eglSystemConstant = 106}
	end

	function size(arg any in) returns(int)
		{eglSystemConstant = 138}
	end

	function startCmd(commandString string in, modeString string in)
		{eglSystemConstant = 212, eglValidNumberOfArguments = [1, 2]}
	end
	
//Add back after V7.0	function startProgram(programName string in, data any in)
//Add back after V7.0		{eglSystemConstant = 136, eglValidNumberOfArguments = [1, 2]}
//Add back after V7.0	end
	
	function verifyChkDigitMod10(input char, length int in, result smallint) {eglSystemConstant = 77} end
	function verifyChkDigitMod10(input num, length int in, result smallint) {eglSystemConstant = 77} end

	function verifyChkDigitMod11(input char, length int in, result smallint) {eglSystemConstant = 78} end
	function verifyChkDigitMod11(input num, length int in, result smallint) {eglSystemConstant = 78} end

	function wait(seconds bin(9,2) in)
		{eglSystemConstant = 102}
	end

	function writeStderr(text string in)
		{eglSystemConstant = 199}
	end

	function writeStdout(text string in)
		{eglSystemConstant = 198}
	end

	function startLog(filename string in)
		{eglSystemConstant = 440}
	end
end
