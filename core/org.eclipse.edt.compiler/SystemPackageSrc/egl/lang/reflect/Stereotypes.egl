/*******************************************************************************
 * Copyright © 2010 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package egl.lang.reflect;

import egl.core.reflect.TypeRef;

record SystemLibrary type Annotation {
	targets = [ElementKind.ExternalTypePart],
	@Stereotype
}
	name string; // used to override given type name
	typeParameters string[];
end

record ClassType type Annotation {
	targets = [ElementKind.ExternalTypePart],
	@PartType{"org.eclipse.edt.mof.egl.EGLClass"},
	@Stereotype
}
	name string;
	isAbstract boolean;
	typeParameters string[];
end

record StructPartType type Annotation {
	targets = [ElementKind.ExternalTypePart],
	@PartType{"org.eclipse.edt.mof.egl.StructPart"},
	@DefaultSuperType{egl.lang.AnyStruct},
	@Stereotype
}
	name string;
	typeParameters string[];
end

record InterfacePartType type Annotation {
	targets = [ElementKind.ExternalTypePart],
	@PartType{"org.eclipse.edt.mof.egl.Interface"},
	@Stereotype
}
	name string;
	typeParameters string[];
end

record EClassProxy type Annotation {
	targets = [ElementKind.ExternalTypePart],
	@PartType{"org.eclipse.edt.mof.egl.EClassProxy"},
	@Stereotype
}
	proxiedEClass TypeRef;
end

record ParameterizableType type Annotation {
	targets = [ElementKind.ExternalTypePart],
	@PartType{"org.eclipse.edt.mof.egl.ParameterizableType"},
	@Stereotype
}
	name string;
	parameterizedType TypeRef;
end 


