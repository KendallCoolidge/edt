/*******************************************************************************
 * Copyright © 2010 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package egl.io.file;

import egl.lang.FieldDeclaration;

Record IndexedRecord type Annotation
{
	targets = [ElementKind.structuredRecordPart],
	@Stereotype,
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.IndexedRecordAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	filename String;
	keyItem egl.core.reflect.internalRef;
	lengthItem egl.core.reflect.internalRef;
	numElementsItem egl.core.reflect.internalRef;
end

Record RelativeRecord type Annotation
{
	targets = [ElementKind.structuredRecordPart],
	@Stereotype,
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.RelativeRecordAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	filename string;
	recordNumItem string;
end

Record SerialRecord type Annotation
{
	targets = [ElementKind.structuredRecordPart],
	@Stereotype,
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.SerialRecordAnnotationTypeBinding",
	eglIsSystemAnnotation = yes
}
	fileName string;
	lengthItem egl.core.reflect.InternalRef;
	numElementsItem egl.core.reflect.InternalRef;
end

enumeration CSVStyle
{
	EGLSystemConstant = 122,
	eglIsSystemPart = yes
}
  quoted = 0,
  escaped= 1
end

Record CSVRecord type Annotation
{
	targets = [ElementKind.recordPart],
	@Stereotype,
	validationProxy = "org.eclipse.edt.compiler.binding.annotationType.CSVRecordAnnotationTypeBinding",
	implicitFields = [
		@FieldDeclaration {
				fieldName = "labels",
				fieldType = string[].type
		}
	],
	eglIsSystemAnnotation = yes
}
	filename String;
	delimiter char(1) = ",";
	textQualifier char(1) = "\"";
	style CSVStyle = CSVStyle.quoted;
	
end
