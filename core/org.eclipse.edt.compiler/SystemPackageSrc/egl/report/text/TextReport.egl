/*******************************************************************************
 * Copyright Â© 2011 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package egl.report.text;

import egl.core.NativeType;
import egl.idl.java.EventListener;

delegate textReportListener(e TextReportEvent in) {eglIsSystemPart = yes}
end

externalType TextReport type NativeType
	onFirstPageHeaderListener textReportListener {@EventListener {addMethod = "setFirstPageHeaderListener",
						listenerType = "egl.report.text.ReportListener",
						method = "handleReportFunction"}};
						
	onPageHeaderListener textReportListener {@EventListener {addMethod = "setPageHeaderListener",
						listenerType = "egl.report.text.ReportListener",
						method = "handleReportFunction"}};
						
	onEveryRowListener textReportListener {@EventListener {addMethod = "setEveryRowListener",
						listenerType = "egl.report.text.ReportListener",
						method = "handleReportFunction"}};
						
	onLastRowListener textReportListener {@EventListener {addMethod = "setLastRowListener",
						listenerType = "egl.report.text.ReportListener",
						method = "handleReportFunction"}};
						
	onPageTrailerListener textReportListener {@EventListener {addMethod = "setPageTrailerListener",
						listenerType = "egl.report.text.ReportListener",
						method = "handleReportFunction"}};
						
	onBeforeGroupListener textReportListener {@EventListener {addMethod = "setBeforeGroupListener",
						listenerType = "egl.report.text.ReportListener",
						method = "handleReportFunction"}};
						
	onAfterGroupListener textReportListener {@EventListener {addMethod = "setAfterGroupListener",
						listenerType = "egl.report.text.ReportListener",
						method = "handleReportFunction"}};
						
	constructor();
	constructor (fileName String? in, topMargin int? in, bottomMargin int? in, leftMargin int? in,
			rightMargin int? in, pageLength int? in, topOfForm String? in);
	
	function startReport (fileName String? in, topMargin int? in, bottomMargin int? in, leftMargin int? in,
			rightMargin int? in, pageLength int? in, topOfForm String? in);
	
	function outputToReport ();
	function finishReport ();
	function terminateReport ();
	
	function setFirstHeaderLines (noOfLines int in);
	function setHeaderLines (noOfLines int in);
	function setTrailerLines (noOfLines int in);

	function column (col int in);
	function printText (textString String in);
	function printText (textString String in, fieldLength int in);
	function printTextFixedWidth (textString String in, fieldLength int in);
	function printFile (fileName String in);
	function println ();
	function skipLines (noOfLines int in); 
	function needLines (noOfLines int in); 
	function spaces (noOfSpaces int in);
	function getPageNumber() returns (int);
	function getLineNumber() returns (int);
	function skipToTop();
	function wordWrapPrint(tempRightMargin int? in);
	function popErrorMessage() returns (String?);
	function pushErrorMessage(message String in);
	function clearErrorMessages();
	function setReportDriver(driver TextReportDriver in);
	function setNativeOutput(native boolean in);
	function isNativeOutput() returns (boolean);
end
