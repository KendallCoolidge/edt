package egl.lang;

import egl.lang.reflect.ClassType;
import egl.lang.reflect.mof.Operation;

/**
 * EglAny represents EGL's "any" type.  It is the supertype of all other types,
 * and as the name implies it can hold any kind of value.
 */
externalType EglAny type ClassType
	/**
	 * {@Operation ==} Compares two EglAnys.
	 */
	static function $EQ(lvalue EglAny in, rvalue EglAny in) returns(EglBoolean) {@Operation{"=="}};

	/**
	 * {@Operation !=} Compares two EglAnys.
	 */
	static function $NEQ(lvalue EglAny in, rvalue EglAny in) returns(EglBoolean) {@Operation{"!="}};

	// This is necessary because it results in boxing.
	/**
	 * {@Operation widen} Performs conversion from any to any.
	 */
	static function asAny(value EglAny in) returns(EglAny) {@Operation{"widen"}};
end
