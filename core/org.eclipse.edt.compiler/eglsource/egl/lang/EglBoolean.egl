package egl.lang;

import egl.lang.reflect.ClassType;
import egl.lang.reflect.mof.Operation;

/**
 * This is the definition of the boolean type.
 */
externalType EglBoolean extends AnyValue type ClassType
	/**
	 * {@Operation ==} Tests if two booleans are equal.
	 */
	static function $EQ(lvalue EglBoolean in, rvalue EglBoolean in) returns(EglBoolean) {@Operation{"=="}};

	/**
	 * {@Operation !=} Tests if two booleans are not equal.
	 */
	static function $NEQ(lvalue EglBoolean in, rvalue EglBoolean in) returns(EglBoolean) {@Operation{"!="}};

	/**
	 * {@Operation &&} Performs a logical and: returns true if both operands 
	 * are true.  If the first operand is false, returns false without evaluating
	 * the second operand.
	 */
	static function $AND(lvalue EglBoolean in, rvalue EglBoolean in) returns(EglBoolean) {@Operation{"&&"}};

	/**
	 * {@Operation ||} Performs a logical or: returns true if either operand is 
	 * true.  If the first operand is true, returns true without evaluating the
	 * second operand.
	 */
	static function $OR(lvalue EglBoolean in, rvalue EglBoolean in) returns(EglBoolean) {@Operation{"||"}};

	/**
	 * {@Operation !} Performs a logical not: returns true if the operand is false,
	 * and returns false if the operand is true. 
	 */
	static function $NOT(value EglBoolean in) returns (EglBoolean) {@Operation{"!"}};

	/**
	 * {@Operation widen} Performs conversion from EglBoolean to EglBoolean.
	 */
	static function asEglBoolean(value EglBoolean in) returns(EglBoolean) {@Operation{"widen"}};

end