/*******************************************************************************
 * Copyright Â© 2012, 2013 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package org.eclipse.edt.eunit.runtime;

import eglx.rbd.StrLib;

// basic handler

handler MultiStatus
	//these values accumulate the aggregate outcome, without 
	//requiring the individual outcomes be stored
	testCnt int;
	expectedCnt int;
	passedCnt int;
	failedCnt int;
	errCnt int;
	badCnt int;
	notRunCnt int;
	firstFailedTestName String;

	/**
	* add status to MultiStatus
	*/
	function addStatus(testId String in)
		s Status = LogResult.getStatus();
		msg String = testId + ": " + s.reason;
		LogResult.logStdOut(msg);
				
		testCnt += 1;
		
		case(s.code)
			when (ConstantsLib.SPASSED)
				passedCnt += 1;
			when (ConstantsLib.SFAILED)
				failedCnt += 1;
			when (ConstantsLib.SERROR)
				errCnt += 1;
			when (ConstantsLib.SNOT_RUN)
				notRunCnt += 1;	
			otherwise	
				badCnt += 1;
				LogResult.logStdOut( "Invalid test state (" :: s.code :: "). Verify that the test function indicates success or failure." );	
		end
		
		if(s.code != ConstantsLib.SPASSED && strLib.characterLen(firstFailedTestName) == 0)
			firstFailedTestName = testId;
		end		

		LogResult.clearStatus();
	end
end

