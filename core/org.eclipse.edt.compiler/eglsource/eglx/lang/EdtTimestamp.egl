package eglx.lang;

import egl.lang.Value;
import egl.lang.reflect.ParameterizableType;
import egl.lang.reflect.mof.Operation;

import org.eclipse.edt.mof.egl.TimestampType;

externalType EdtTimestamp extends Value type ParameterizableType {
	parameterizedType = TimestampType
}
	/**  
	 * @Operation{"<"} Compares two timestamps.
	 */
	static function $LT(lvalue EdtTimestamp in, rvalue EdtTimestamp in) returns (EdtBoolean) {@Operation{"<"}};
   
	/**
	 * @Operation{">"} Compares two timestamps.
	 */
	static function $GT(lvalue EdtTimestamp in, rvalue EdtTimestamp in) returns (EdtBoolean) {@Operation{">"}};

	/**
	 * @Operation{"<="} Compares two timestamps.
	 */
	static function $LTE(lvalue EdtTimestamp in, rvalue EdtTimestamp in) returns (EdtBoolean) {@Operation{"<="}};

	/**
	 * @Operation{">="} Compares two timestamps.
	 */
	static function $GTE(lvalue EdtTimestamp in, rvalue EdtTimestamp in) returns (EdtBoolean) {@Operation{">="}};

	/**
	 * @Operation{"=="} Compares two timestamps.
	 */
	static function $EQ(lvalue EdtTimestamp in, rvalue EdtTimestamp in) returns(EdtBoolean) {@Operation{"=="}};

	/**
	 * @Operation{"!="} Compares two timestamps.
	 */
	static function $NEQ(lvalue EdtTimestamp in, rvalue EdtTimestamp in) returns(EdtBoolean) {@Operation{"!="}};

	static function asTimestamp(value EdtString in) returns (EdtTimestamp) {@Operation{"narrow"}};
	static function asTimestamp(value EdtString in, pattern EdtString in) returns (EdtTimestamp) {@Operation{"narrow"}};
	static function asTimestamp(value EdtTimestamp in) returns (EdtTimestamp) {@Operation{"narrow"}};

	function dayOf() returns(EdtInt);

	function monthOf() returns(EdtInt);

	function yearOf() returns(EdtInt);

	function weekdayOf() returns(EdtInt);

	function dateOf() returns(EdtDate);

	function timeOf() returns(EdtTimestamp);//TODO this really should return EdtTimestamp("hhmmss"), but we can't handle that.

	function extend(timeSpanPattern EdtString in) returns(EdtTimestamp);
end