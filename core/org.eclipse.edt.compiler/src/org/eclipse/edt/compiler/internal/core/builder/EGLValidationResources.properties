###############################################################################
# Copyright © 2011, 2012 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
# IBM Corporation - initial API and implementation
#
###############################################################################
# NLS_ENCODING=UTF-8
#NLS_MESSAGEFORMAT_VAR
 
#Syntax error messages, have "SYN" prefix
2000=Missing semicolon.
2001=Unexpected end of file.
2002=Syntax error on input "{0}".
2003=Missing END for this part.
2004=Unmatched brace.
2005=Unmatched parenthesis.
2006=Unmatched bracket.
2050=String literal is not properly closed by double-quote.
2051=Block comment is not properly closed.
2052=Inline SQL statement is not properly closed by closing brace "}".
2053=Whitespace is not allowed between "#sql" and the opening brace "{".
2054=Whitespace is not allowed between "#sqlCondition" and the opening brace "{".
2055=This Data Access is incomplete.

2056=Duplicate part subtype found.
2057=The type {0} is not a valid subtype for part {1}.
2058=The property {0} is not valid in this location.
2060=The value {0} for property {1} must be a valid name.
2064=The value {0} for property {1} must be an array of valid names.
2065={0} is not an annotation.

#Advanced Syntax Error Messages

#Missing non-terminal 
2100=Syntax error.  "{0}" expected before this token.

#Incorrect non-terminal
2101=Syntax error.  "{0}" expected instead.

#Missing previous non-terminal
2102=Syntax error.  "{0}" expected before this token.

#Incorrect previous non-terminal
2103=Syntax error.  "{0}" expected instead.

#Missing terminal
2104=Syntax error.  "{0}" expected before this token.

#Incorrect terminal
2105=Syntax error.  "{0}" expected instead.

#Unexpected terminal
2106=Syntax error.  Delete this token.

#Missing previous terminal
2107=Syntax error.  "{0}" expected before this token.

#Incorrect previous terminal
2108=Syntax error.  "{0}" expected instead.

#Unexpected previous terminal
2109=Syntax error.  Delete this token.

#Missing scope closer
2110=Syntax error.  "{0}" expected before this token.

#Unexpected phrase
2111=Syntax error.  Unrecognized input.

#Incorrect phrase
2112=Syntax error.  Input is not recognized as "{0}"

#Panic phrase
2113=Syntax error.  Unrecognized input starting from this token.

#Too many syntax error messages
2114=Too many syntax error detected in this file.  This file may not be a valid EGL file or the VisualAge Compatibility compatibility preference is set incorrectly.


#Advanced Lexer Error Messages
2200=String literal is not properly closed by double-quote
2201=Block comment is not properly closed by */
2202=#sql is not properly closed by }
2203=#sqlcondition is not properly closed by }
2205=Invalid escape sequence (valid ones are \\b, \\f, \\n, \\r, \\t, \\\\, and \\")
2206=Whitespace is not recommended between #sql and {
2207=Whitespace is not recommended between #sqlcondition and {
2209=Invalid character in hex literal. Valid characters are 0-9, a, b, c, d, e, and f.
 
#Core message range: 3000-3999
3000=An error has occurred while compiling part {0}.  Check the .log file for additional information.
3001=The name {0} has an invalid length of {1}. The maximum length is {2}.
3002=The name {0} contains invalid characters.
3003=The name {0} cannot start with eze.
3005=Decimals for item {0} cannot be specified for nonnumeric primitive type {1}.
3010=A duplicate field named {0} is declared in part {1}.
3012=The same name {0} also appears as variable, parameter, use or constant declaration in part {1}.

3019={0} is a reserved word.   It cannot be used as a name.
3022=A duplicate {0} named {1} found.

3028=The function {0} is defined with {1} parameters. EGL supports a maximum of 255 parameters on a function definition.

3031=A duplicate use declaration named {0} is declared in part {1}.
3035=Subscripts and substrings cannot be subscripted.  Found nested subscript in {0}.
3037=The {0} {1} is not allowed to be subscripted.
3039=The name {0} is duplicated in the namespace.
3040=The name of the {0} {1} must match the file name {2} as it is a main part. The names must match exactly, including case.

3041=There can only be one main part per file. Error on {0} {1} in file {2}. 
3042=The {0} {1} cannot be qualified.
3049=The name of the package given in the file must match the directory structure in which the file resides. The match must be exact, including case.

3054=Property: {0}.  The value for this property must be one of the following: {1}.
3055=Property: {0}.  This property requires an array of numeric literals as the value.
3056=Property: {0}.  This property requires an array of strings as the value. 
3057=Property: {0}.  This property requires an array of arrays of strings as the value.
3058=Property: {0}.  This property requires an array of arrays of numeric literals as the value.
3059=Property: {0}.  This property requires a numeric literal value.
3060=Property: {0}.  This property requires a quoted string as the value.

3062=Property: {0}.  This property is required for the part type {1}.
3064=The file residing in package {0} in the directory structure must specify a package statement.
3066=Invalid blank spaces were found in the name {0}.
3067=The array parameter {0} in the function definition {1} cannot have a dimension specified.
3070=The properties {0} and {1} cannot both be specified.
3071=Property: {0}.  This property requires either a specific value or list of values inside of parentheses.
3072=Property: {0}.  This property requires either a specific value or an array of literal values.
3073=Property: {0}.  This property requires either a name or one of a set of specific values.
3074=Property: {0}.  This property requires either an integer or one of a set of specific values.
3075=Property: {0}.  This property requires either a quoted string or one of the following values: ({1}).
3076=Property: {0}.  This property requires either a literal or one of a set of specific values.
3077=Property: {0}.  The value specified is not the right type of value for this property. 
3078=Property: {0}.  This property requires an array of literal values. 
3079=Property: {0}.  This property requires a list of values inside of parentheses.
3080=Property: {0}.  This property requires an SQL string enclosed in the sql and end keywords.
3081=Property: {0}.  This property is allowed only on an array, not an element of an array.
3083=Property: {0}.  This property requires an integer value greater than 0. 
3084=Property: {0}.  This property requires an array of quoted strings.
3085=Property: {0}.  This property requires an integer value. 
3086=Property: {0}.  This property requires an array of integers.
3087=Property: {0}.  This property requires an array of integer arrays.
3088=Property: {0}.  The value for this property must be an array whose elements are one of the following: {1}.
3089=Property: {0}.  The value for this property must be of length {1}.
3108=The value for property {0} must match a data declaration.
3118=Invalid parameter {0}. There must be at least one structure item in the contents of the record {1}.
3127=Property: {0}.  The expression specified is not valid as a property value.
3128=The annotation {0} contains multiple fields, so its value cannot be set.

3169=The {0} property value {1} must not resolve to a library function.
3170=Property {0} must be defined with an item of primitive type {1}. {2} found.
3183=The {0} property value {1} must resolve to a function.

3193=Property {0} must be defined with one of the character types. {1} found.
3194=Property {0} must be defined with a numeric type. The type of this item is {1}.

3224=The value {0} exceeds the maximum integer value of {1}.

3248=Dimension specification is not allowed on an array declaration.
3249=A settings block is invalid in this location.
3250=The integer literal {0} is out of range.
3251=The decimal literal {0} is out of range.
3252=The floating point literal {0} is out of range.
3255=Once a dimension is left unspecified no further dimensions can be specified.

3259=Invalid new operation on type {0}.
3260=The type {0} cannot be resolved.
#In msg. 3261, do not translate: isa, as
3261=The target of isa or as ({0}) must be a data type or a part reference.
3262=The type {0} is ambiguous.
3263=Invalid array size {0}. Array sizes must be non-negative integer literals.
#In msg. 3264, do not translate: isa, as
3264=A size may not be specified for an array type in an isa or as expression.
3267=The annotation {0} for part {1} defines a field or function named {2} implicitly, so a field or function named {2} is not allowed.
3277=The length of bytes literal {0} must be even.
3278=The bigint literal {0} is out of range.
3279=The smallint literal {0} is out of range.
3280=The smallfloat literal {0} is out of range.
3281=The type {0} cannot be specified with arguments.
3282=The argument {0} is not valid for the type {1}.
3283=Invalid number of arguments specified for the type {0}.

3290=The annotation field or literal array entry {0} cannot accept an array literal as a value.
3291=The value specified for the annotation field or literal array entry {0} must be an array literal.
3292=The value of null cannot be specified for the non-nullable annotation field {0}.
3293=The value specified for the annotation field or literal array entry {0} must be a quoted string or a string constant.
3294=The value specified for the annotation field or literal array entry {0} must either yes or no.
3295=The value specified for the annotation field or literal array entry {0} must be an integer literal or an integer constant.
3296=The value specified for the annotation field or literal array entry {0} must be a float literal or a float constant.
3297=The value specified for the annotation field or literal array entry {0} must be a decimal literal or a decimal constant.
3298=The value specified for the annotation field or literal array entry {0} is not compatible with the type of the field.

3328=The import statement {0} collides with another import statement.

3344=Names of main parts cannot contain a dash (-).
3345=Subscripts and substrings must be either positive integers, qualified names, or expressions.  Function invocations and new operations are not allowed.  Found {0}.
3346=Real numbers and floating point numbers cannot be used as subscript or substring indices. String literals cannot be used as substring indices.
3348=The type of reference for {0} cannot contain a substring.
3349=Qualified names must be a series of identifiers separated by dots. They cannot begin or end with a dot. Found {0} in {1}.
3352=Typedef {0} cannot be subscripted.
3355=Identifier {0} cannot be subscripted.
3356=PartReference {0} cannot be subscripted.
3357=RecordFileName {0} cannot be subscripted.
3358=Name {0} cannot be subscripted.
3359=Name {0} cannot be qualified.
3362=Invalid data reference {0}. Only character types may be referenced with substrings.
3363=Invalid index {0}. Substring indices must be integer literals or data items.
3364=Substring expressions are not valid in this statement location.

3365=Alias {0} cannot be qualified.
3366=Identifier {0} cannot be qualified.

3376=Cannot override record properties because the record is not a structured record.

#In message 3477 and 3478, do not translate: into
3377=Function invocations may not be used within array subscripts in an into clause.
3378=Dynamic data accesses may not be used in an into clause.

3385=The function {0} specified for property {1} must be defined with no parameters.
3386=The function {0}  specified for property {1} must be defined with a return value of type {2}.
3387=The function {0}  specified for property {1} must be defined with a single parameter of type {2}.
3388=The parameter for function {0}  specified for property {1} must be defined with the IN modifier.
3389=The function {0}  specified for property {1} must be defined without a return type.

#Validation messages for Services spec
#In message 3400, do not translate: service, interface
3400=The part {0} must implement the inherited function {1} defined in interface {2}.

#Validation messages for Handlers spec
3410=The type {0} is not valid for a data declaration in the context of part {1}.

#Validation messages for Delegates spec

#In message 3418, do not translate: main, program, delegate
3418=Function {0} cannot be referenced without an argument list, because it is the main function for a program.

#Validation messages for Java Object spec
3420=Error on part {0}. This kind of part requires a subtype definition.
#In message 3421, do not translate: ExternalType
3421=The type {0} must be an ExternalType part.
#In message 3422, do not translate: ExternalType
3422=Initial values cannot be set for fields in an ExternalType.
#In message 3423, do not translate: get, set
3423=Invalid attempt to write to field {0}, which specifies a get method but not a set method.
#In message 3424, do not translate: set, get
3424=Invalid attempt to read from field {0}, which specifies a set method but not a get method.
#In message 3424, do not translate: ExternalType, Record, delegate, blob, clob, any
3425=The type {0} cannot be used in a JavaObject ExternalType part. Record parts, delegate parts, handler parts, and types blob, clob, dictionary, arrayDictionary, and any are not allowed.
3426=The type {0} cannot be used in a JavaObject ExternalType part unless the property {1} is specified for the data declaration.

#In message 3427, do not translate: Interface
3427=The type {0} must be an Interface part.
3428=The invocation of the function, constructor or the declaration must be enclosed in a Try Statement that specifies AnyException or JavaObjectException in one of its OnException blocks.
3429=The type {0} does not have a default constructor.

3433=The type {0} is not instantiable. The reference to this type must be defined as nullable.
3434=The constructor for the type {0} is private.
3435=The type {0} is not instantiable.

3436=Initializing values in the settings block is not allowed. The field {0} already contains an intializer.
3437=Initializing values in the settings block is not allowed. The field {0} is null at this point.
3438=Property overrides are not supported for field {0}.
3439=A positional property is not allowed since the array type in the new expression is defined with an initial size.

#Validation messages for Exception Handling spec
#In message 3440, do not translate: onException
3440=Invalid type {0}. The type in an onException clause must be an exception record.
#In message 3441, do not translate: onException
3441=The exception {0} has already been named in another onException clause.
3444=The type {0} must be an exception record.

3446=The subtype of an external type must match the subtype of any external types it extends.

3454={0} cannot be resolved as an item or a container. It cannot be a constant.
3455=The variable access {0} must be qualified with the name of one of the following system libraries: ({1}).
3457=The {0} clause cannot be specified for this statement, because the {1} clause has been specified.
3458=The part, part type, statement, or operator {0} is not supported in this version of the language.
3461=The value for property {0} must be the name of a function within part {1}. Functions defined in other parts are not allowed.
3462=The property {0} cannot be specified for item {1} of type {2}. The following types are not supported: ({3}).

3463=The {0} statement is not supported in this release.
3464=No compiler extensions were found for the {0} statement, which has no default behavior. The {0} statement cannot be used until an extension has been configured for this statement. 

3465=The number of non-decimal digits in value {0} is {1}, which is longer than the defined length {2} for non-decimal digits of constant {3}. 
3466=The number of decimal digits in value {0} is {1}, which is longer than the defined number of decimal digits {2} for constant {3}.
3468=There is more than one signature for overloaded function {0} that matches the arguments provided.
3469=There are no functions named {0} that match the arguments provided.

3470=The enumeration constant {0} is not a valid integer value.
3471=The constant value {0} has already been used in the enumeration {1}.
3472=Specifying multiple array indices in the array access {0} is not allowed.
3473=The enumeration {0} must specify one or more fields.

3474=The type {0} must be a Class part.
3475=The type {0} cannot extend itself.

3480=The annotation Throws is only valid for functions and constructors in an ExternalType with subtype JavaObject.

3512=The field {0} in the annotation or stereotype {1} requires a type.
3514=Parameters are not allowed on the type of a field within an annotation or stereotype.
3515=The type {0} specified for field {1} is not valid in an annotation or stereotype.

3896=The extension for file {0} is incorrect.
3897=The command argument {0} is not valid if a command file is specified.
3898=Could not load properties file named {0}.
3899=Could not load action factory named {0}.

3990=The option {0} is invalid.
3991=The command file {0} must have a file extension of .xml.
3992=Error occurred while retrieving contents of file {0}. Error text = {1}
3995=The argument {0} was specified more than once.
3996=No command file was specified.
3997=The command file {0} was not found.
3998=XML Validation Error - {0}
3999=XML Validation Error - {0} - in file {1}

#For now, I'm using 4001 to start data structure messages (record & structure)
4024=The dedicatedService property is only valid for a field whose type is a Service. Fields with type Interface are allowed only if serviceName is specified.
4032=When declaring an array of references to an array, no occurs may be specified for the referenced array.
4035=Field {0} must be defined with a type.

4038=The function {0} is overriding an implicit function with the same name.

4118=Structure item {0} for data part {1} is a leaf item and needs to have primitive characteristics or use a data part as a typeDef.

#For now, reserving 4200-4299 for Statement Error Messages
4209=The expression {0} is not compatible with the NULL keyword.

4210=The label {0} in the exit stack statement does not match a label in the main function of program {1}.
4213=The return value for function {0} is not compatible for assignment to data part {1} in program or function {2}.
4214=A primitive-type conflict exists in the assignment statement between the target {0} and the return value of function {1} in program or function {2}.

4217=The literal {0} is not compatible for assignment to data part {1} in program or function {2}.
4218=A primitive-type conflict exists in the assignment between the target {0} and the literal source {1} in program or function {2}.

4220=The list of into expressions for the {0} statement is empty. This statement will result in no data being retrieved.
4222=The maximum number of arguments allowed on the call to {0} is {1}, but {2} were found.

4291=The number of arguments in the call statement ''{0}'' must be the same as the number of parameters ''{1}'' in the target function {2}.

#For now, reserving 4350-4499 for item messages
4401=The length value {0} for type {1} must be a number in the {2} range.
4402=The decimals value {0} for type {1} must be a number in the {2} range.
4403=The decimals value {0} for type {1} must be less than or equal to the length value {2}.

4412=The length value {0} for type {1} cannot be negative.

#For now, reserving 4500-4579 for SQL statement messages.
4515=Cannot build the implicit {0} SQL statement, for the {1} statement, because of errors with I/O object {2}.
4530=The I/O object {0} must be defined with at least one structure item that does not specify the property persistent = no.
4531=The I/O object {0} must be defined with at least one column that is not read only for the {1} statement.
4532=The I/O object {0} must not be defined as an SQL join for the {1} statement.
4533=The I/O object {0} must be defined with at least one column that is not a key or read only for the {1} statement.

#For now, reserving 4580-4599 for SQL retrieve messages.
4584=Column {0} was not retrieved because it is defined with SQL type {1}, which is not supported.
4585=The length of SQL item {0} was shortened from {1} to 32 characters, which is the maximum allowed for an item of type DECIMAL.
4586=The number of decimals in SQL item {0} was shortened from {1} to 32 characters, which is the maximum allowed for an item of type DECIMAL.
4587=The length of SQL item {0} was shortened from {1} to 65534 characters, which is the maximum allowed for an item of type HEX.
4589=The length {0} of SQL item {1} is invalid and was set to zero.
4590=The length of SQL item {0} was shortened from {1} to 32767 characters, which is the maximum allowed for an item of type CHAR or MBCHAR.
4591=The length of SQL item {0} was shortened from {1} to 16383 characters, which is the maximum allowed for an item of type DBCHAR.
4592=The length of SQL item {0} was shortened from {1} to 16383 characters, which is the maximum allowed for an item of type UNICODE.
4593=The number of decimals {0} of SQL item {1} is invalid and was set to zero.

#For now, reserving 4900-4999 for Program/Function/Logic messages
4902=The parameter {0} for function {1} cannot be an annotation, program, or library.
4906=The name {0} specified for a part is a reserved word.
4922=Program {0} has no functions named main. One is required. 
4924=Main functions cannot contain parameters.
4926=The type {0} is not a valid type for a data declaration.
# {1} is a part type and {2} is the part name. for example: The value of use declaraion CustomerLibrary in program DoStuff is invalid...
4930=The value of use declaration {0} in {1} {2} is invalid. You must use an enumeration or a library part.

4957=The ExternalType parameter {0} must be specified with the in modifier.
4958=The const modifier is not allowed to be specified with the out modifier.
4961=The parameter {0} in the ExternalType function or constructor cannot specify the const modifier.
4962=The parameter {0} in the Service or Interface function {1} cannot specify the const modifier.

4966=All values of the literal array must be the same type.

5009=The IS or NOT expression is not supported.

5035=For statement counter variable must be integer type.
5036=For statement {0} must be an integer literal, integer item or numeric expression of integers.
5037=Foreach statement must declare a target variable when the source expression is an array.
5038=The foreach statement source expression {0} must be an array.

5045=The part {0} extends {1}, which results in an illegal recursive loop.

5048=Only valid comparison between ref types is == or !=.
5049=The primitive type {0} for {1} is not valid for use with the {2} operator.
#In msg. 5052, do not translate: null
5052=Records can only be compared to null.

5053=Comparing the text operand {0} with the numeric operand {1} may result in a numeric conversion error at runtime. 

#must be inside either a for, foreach, or while construct
5054=The continue statement must be inside either a for, foreach, or while statement block.
5055=Invalid {0} modifier. The {1} {0} modifier may only be used within a {1} statement block.
5056=An enclosing loop with label {0} could not be found.

5057=The record {0} contains an item whose type results in an illegal recursive loop.

5070=The parameter {0} could not be resolved.
5071=Data type number can be used only when defining a function parameter.
5072=The record {0} has already been referenced, or is the parent of the current item. This duplication establishes an illegal recursive loop.

##5077-?? Case statement messages
5077=Invalid when clause. If the case criterion is specified, the when clause cannot be a conditional boolean expression.
5078=Invalid when clause. If the case criterion is omitted, the when clause must be a conditional boolean expression.


##5079-?? Misc Expression validation messages
5079=The operand {0} is not valid for use with the operand {1} with the {2} operator.
5080=The literal {0} is invalid for use in a numeric expression.
5081=The type for {0} must be a valid numeric type to be used in a numeric expression.
5082=The type for {0} must be a valid character type to be used in a string concatenation expression.
5083=The literal {0} is invalid for use in a string concatenation expression.
5084=The expression {0} is not compatible with the expression {1}.
5085=The element {0} is not valid for use in the expression.
5086=The unary expression {0} is not valid for use in a string concatenation expression.
5087=The primitive type {0} for {1} is not valid for use in a string concatenation expression.
5088=The primitive type {0} for {1} is not valid for use in a numeric expression.
5089={0} is not valid for compare to {1}.
5090=The operand {0} in the in condition must be an item or a literal.
5091=The operand {0} in the in condition must be an array or table column.

## 5097 - 51?? - System Word Validation (Jeff) ##
5109=Function {0} requires exactly {1} argument(s).

## In the following messages Do Not Translate:	
##					returning to
##                  FROM
##                  for
5187=Invalid expression. Must be either an item, or a positive integer literal.
5188=Invalid expression. Must be either an item, a string literal, or a string literal concatenation.
5189=Argument {0} for {1} must be an integer data item consisting of exactly {2} digits.
#In msg. 5193, do not translate "from"
5193=Invalid from expression {0}. The from expression must be an integer item or literal.
5196=Invalid for count {0}. The for count must be an integer item or literal.
5197=The prepare statement requires a FROM string expression clause, which is missing.
5199={0} Argument {1} for {2} must not be a constant.  At line {3} in file {4}
5200=Argument {0} for {1} must be a data item or record. 
## End Jeff Validation Messages


## For now, reserving 5201-5299 for SQL parsing Messages ##
5201=Invalid escape sequence \\{0} in string literal.
5202=String literal not closed at end of line.
5203=Numeric literal has too many digits.
5204=A colon was found in the name {0}.  Colons indicate substrings.  Substrings must appear in square brackets following a data reference.
5205=A right bracket that was not terminating a substring or subscript was found in name {0}. 
5206=Missing from location for substring in name {0}.  When substring notation is used a from location is required.  
5207=Too many substring locations specified in name {0}.  Only a from and a to location are allowed.
5208=Unrecognized token {0} found in a name.  Names are identifiers separated by dots.  Subscripts and substrings are enclosed in square brackets.
5209=Unmatched left bracket found in name {0}.
5210=Found {0} in name following the substring operation.  The substring must be the last thing in a name.
5211=Empty brackets found in the name {0}.

5213=The comparison of the operands {0} and {1} may result in unpredictable results. It is recommended that the expression {2} be explicitly cast by using the AS operator.

5214=No operation is defined for expressions {0} and {1} with the {2} operator in the expression {3}.
5215=The substring operation is not defined for expression {0}.
5216=No operation is defined for expression {0} with the {1} operator.

5414 = The property {0} is only valid for primitive type {1}.  

##For now, reserving 5600-5699 for Library messages
5619=A null cannot be passed to the non-nullable parameter {0} in function {1}

5704=A proxy function {0} cannot contain statements.

5800=The index {0} must be greater than 0.
5801=The index {0} cannot be greater than {1}.
5802=The first index {0} must be smaller than the second index {1}.

## For now reserving 6000-6050 for EGL Web Services Messages ##
6000=The operation name {0} is incorrect.  It must be a valid Java identifier excluding currency symbols.
6001=The program path {0} is incorrect or cannot be found.
6002=The web service definition has multiple operations with the name {0}.
6003=The web service definition should contain at least one operation.
6004=The web service definition name must be a valid Java identifier excluding currency symbols.
6005=The web service definition name {0} must match file name {1}. 
6006=Operation and program path names are required for each operation.
6007=The operation name {0} cannot match the web service definition name.
6008=The web service definition name {0} is incorrect.  It cannot be a Java keyword.
6009=The operation name {0} is incorrect.  It cannot be a Java keyword.
6010=The parameter {0}, in operation {1}, does not exist in program {2}.
6011=The parameter {0}, in program {1}, does not exist in operation {2}.
6013=The parameter name {0} in the WSDL does not match the parameter name in the interface function {1}
6014=The interface function {0} does not have a corresponding operation in the WSDL
6015=The service port {0} does not exist in the WSDL
6016=The parameter type for parameter {0} in the WSDL does not match the parameter type in the interface function {1}
6017=The record {0} has a different number of fields than wsdl complex type namespace:{1}, name:{2}

## SQL clause validation
6510=The {0} SQL I/O statement does not allow the {1} option to be specified more than once.  

6570=The item access {0} resolved to a record, form, or DataTable. There is an item called {0} in record, form, or DataTable {1}.
6571=The item access {0} resolved to an item in record, form, or DataTable {1}. There is a record, form, or DataTable called {0} that is known to the program.
6572=The item access {0} resolved to an item in record, form, or DataTable {1}. There is an item called {0} in record, form, or DataTable {2}.

6580=Not enough subscripts were specified for array access {0}.
6581=Too many subscripts were specified for array access {0}.
6582=The subscript {0} in array reference {1} is out of range.
6583=The subscript {0} in array reference {1} must be an integer item or integer literal.
6584=Once dynamic notation is used in a reference, all remaining qualifications must use dynamic notation.
6585={0} is an array and is not subscripted.
6586={0} is not an array and cannot be subscripted.
6587=Expressions are not allowed in dynamic accesses.
6588={0} cannot be accessed with a string subscript.
6589=Property: {0}.  The value for this property must be an array.
6590=Property: {0}.  The value for this property must be an array of quoted string arrays. 

6599=Only simple, primitive, non-array types may be used as data item types.

## messages for return statement
6608=The return statement specifies a return value but one is not defined for the function.

## general messages related to data access resolution
6619={0} cannot be resolved.
6620=The variable access {0} is ambiguous.
6622={0} cannot be resolved as an item or the resolved item has the wrong type. It cannot be a constant.

## messages for goto statement
6624=The label {0} is not defined in function {1}.

## messages for label statement
6625=Duplicate label {0} in logic container {1}.

## messages for exit statement
6627=Invalid literal {0}. The return code for an exit program statement must be an integer expression.
6628=Invalid return code {0}. The return code for an exit program or rununit statement must be an integer expression.
6629=Invalid modifier {0}. The modifier for an exit stack statement must be a label defined within the main function of the program.

## message for assignment statement
6646=Invalid attempt to modify {1} which is a constant. Constants are not allowed to be modified.
6647=Invalid string concatenation expression. {0} is not a valid type for operands of string concatenations.  Valid string concatenations may only contain data items or string literals.
6648=The operands in the expression {0} are of incompatible types.
6649=Substring access expressions are not valid as the target of a move or assignment, or as arguments to INOUT or OUT function parameters.
6650={0} is a record, so the assignment source must be a record, or evaluate to CHA, HEX or MBCHAR.
6651={0} is a record, {1} must be a record or character item.
6652={0} must be a record or item.
6653={0} and {1} are not compatible types in the expression {2}
6654=Function {0} must return a type.
6655=The variable {0} is not defined.

6673=Error in argument {0} in function invocation {1}. For parameters with the INOUT modifier, literals and literal expressions are not valid and argument constants are only valid if the parameter is also constant. 
6674=Error in argument {0} in function invocation {1}. This type of argument requires that the parameter be defined with the IN modifier. 
6675=Error in argument {0} in function invocation {1}. Constants, literals and literal expressions are not valid for use with parameters defined with the OUT modifier.

## messages for function invocations
6679=The function reference {0} cannot be resolved.
6680=The function reference {0} is ambiguous.
6681=The function {0}({1}) is not applicable for the arguments ({2}).
6685=Error in argument {0} in function call {1}. Dynamic arrays may not be passed as arguments.
6686=Error in argument {0} in function call {1}. Arguments can only be records, items, literals, constants, expressions or function invocations. Literals and constants are not allowed as arguments for some functions.
6687=The function {0} must be qualified by an identifier for an array.
6688=Error in argument {0} in function call {1}. The type of the argument must be compatible with the items contained in the dynamic array qualifier.

## messages for return statement
6691=The type {0} does not match the type {1} which the function returns.
6692=Invalid expression {0}. The return value must be an item, literal, or constant identifier.
6693=Invalid return value {0}. The return value must be an item, literal, or constant.

6706=The argument at position {0} on the call statement requires that the Program {1} be resolvable.
6707=The program {0}({1}) is not applicable for the arguments ({2}).
6708=The function {0}({1}) is not applicable for the arguments ({2}).
6709=Argument {0} requires that the target program be an EGL program.

6716=The argument {0} cannot be passed to the inOut or Out parameter {1} of the function {2}. The types {3} and {4} are not reference compatible.

6719=The argument to the appendAll() function must be an array of compatible type with {0}.

6726=The {0} exit modifier may only be used in a program.
6727=The {0} exit modifier may not be used in a service.

6728=The label {0} is not accessible from this code location.

6729=The argument {0} in function invocation {1} is invalid. The argument must be a record or dictionary.
6731=The argument {0} cannot be passed to the in or out parameter {1} of the function {2}. The types {3} and {4} are not assignment compatible.
6732=The argument {0} in function invocation {1} is invalid. The argument must have a primitive type.
6738=The argument {0} in function invocation {1} is invalid. The argument must be a record.

6746=The function reference {0} cannot be resolved.
6747=The function reference {0} is ambiguous.
#Don't tranlate: type
6748=DataItem part {0} which is referenced by item {1} contains an error in the context of type {2}. The error is: {3}

6750=Invalid array literal {0}. All elements must be the same type of literal.
6751=The target for a function invocation must be a function or a delegate.

6752=Invalid expression {0} for the convert operation. The expression must have a primitive type of string, char or unicode.
6753=Invalid expression {0} for the convert operation. The expression must be a literal string.

6754=The expression "this" is not valid for use with parameters defined with the INOUT or OUT modifier.
6756=Constructor call must be the first statement in a constructor.

6758=The expression "super" is not valid as a function argument.

## messages for set values blocks
7510=A positional property is not valid for use with {0}. The item must be an array with a specified length.
7511=A set values block is not allowed on an argument in a function invocation.
7512=A set values block or constructor is not allowed in a conditional expression.
7513=A set values block is not allowed in a criterion for a case statement.
7514=A set values block is not allowed in a when expression.
7515=A set values block is not allowed on an argument in a call statement.
7516=A set values block is not allowed on a return argument.
7517=A set values block is not allowed in this location.
7518=The use of {0} is only allowed in a set values block. 

7624=Invalid pattern {0}. The length of the first field in an interval pattern must be no longer than 9 digits.
7625=Invalid pattern {0}. Patterns may only contain the characters y, M, d, H, m, s, and f.
7626=Invalid pattern {0}. The fields in the pattern must appear in the order y, M, d, H, m, s, f.
7627=Invalid pattern {0}. The length of the year field must be exactly four digits.
7628=Invalid pattern {0}. The length of the month field must be exactly two digits.
7629=Invalid pattern {0}. The length of the day field must be exactly two digits.
7630=Invalid pattern {0}. The length of the hour field must be exactly two digits.
7631=Invalid pattern {0}. The length of the minutes field must be exactly two digits.
7632=Invalid pattern {0}. The length of the seconds field must be exactly two digits.
7633=Invalid pattern {0}. The length of the second fractions field must be six digits or less.
7634=Invalid pattern {0}. An intermediate field is missing.
7635=Invalid pattern {0}. Patterns may not be empty.
7636=Invalid pattern {0}. Interval patterns must span either years through months or days through second fractions.

7684=The property {0} cannot be specified for an array.
7689=Invalid item {0} for property {1}. The item must be defined at the top level of its container, and it must be a leaf item.
7690=The primitive type {0} for {1} is not valid for use in a boolean expression.
7691=Function {0} must have one parameter whose type is compatible with the type {1} of item {2}. Function {0} has {3} arguments.
7692=Function {0} must have one parameter whose type is compatible with the type {1} of item {2}. The types {3} and {1} are not compatible.
7693=The property {0} must be specified for an array.
7695=Invalid item {0} for property {1}. The item may not be a field in a library part.

# 7750 - 7769 Reserved for Validation Messages from Miscellaneous Spec
7755=Unreachable code.

7801 = A part must implement an interface.
7802 = A use statement in a service cannot have another service as the target.
7804 = The type {0} is not supported for function parameters in a service or service proxy function.
7805 = The type {0} is not supported as a return type in a service or proxy function.
7806 = The field attribute is not supported for function parameters in a service or proxy function.
7810 = Functions in an interface cannot be private.
7824 = The IN modifier must be specified for the parameter {0} because it is defined in a JavaObject externalType.
7826 = The IN modifier must be specified for the parameter {0} because it is defined in a JavaScriptObject externalType.

7830 = A constructor for {0} which matches the supplied arguments could not be found.

7954 = The function {0} cannot be the target of an assignment.

#8300-: Used for EGL deployment
8300=An exception occurred while reading the XML deploy files.
8303=The {0} RUIHandler is being deployed to {1}.
8304=Deployment completed for {0}.
8305=Deployment failed for {0}.
8306=The following exception occurred: {0}
8307=The {0} NLS properties file was not created.
8308=The {0} NLS properties file does not exist.
8309=The binding file for {0} deployment descriptor was not created.
8310=The {0} deployment descriptor could not be opened.
8312=The HTML file was not created.
8313=The {0} runtime properties file wsa not created.
8314=The {0} properties file deployed.
8315=The {0} properties file was not deployed.
8316=The {0} binding file deployed.
8317=The {0} binding file was not deployed.
8318=The {0} runtime properties file was not deployed.
8319=The {0} runtime properties file deployed.
8320=The {0} HTML file deployed.
8321=The {0} HTML file did not deploy to the {1} locale.
8322=The {0} runtime message bundle deployed.
8323=The {0} runtime message bundle was not deployed.
8324=The {0} folder for runtime message bundle deployment could not be created.	
8325=The {0} folder for properties file deployment could not be created.
8326=The {0} properties file could not be found. Deployment for this locale is skipped.
8327=The {0} file which is used by {1} could not be found. Generate all required projects.
8329=Resource references have been configured.
8330=An error occurred while configuring one of the data sources: {0}
8331=Could not write file {0}: {1}
8332=Data sources have been configured in file {0}.
8333=Target project is not a web project with Apache Tomcat as its runtime. Data sources will not be configured and SQL resource bindings will not be converted to use JNDI.

9001=Generation of {0} was terminated because the part {1} could not be found.

#For now, reserving 9992-9997 for Generation complete/failed
9991=The part {0} cannot be generated because the part contains validation or syntax errors.

9997=Generation failed for {0}.

#For now, reserving 9998-9999 for unexpected exception
9998=Exception occurred: {0}
9999=Stack Trace: {0}

