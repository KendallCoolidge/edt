/*******************************************************************************
 * Copyright © 2003, 2010 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package org.eclipse.edt.compiler.dev.tools;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.eclipse.edt.compiler.core.EGLKeywordHandler;
import org.eclipse.edt.compiler.core.IEGLConstants;


/**
 * @author jshavor
 *
 * output to the console code for EGLDefinedKeywordCompletions.getDefinedKeywordCompletions()
 * copy and paste the results to EGLDefinedKeywordCompletions.getDefinedKeywordCompletions()
 */
public class EGLDefinedKeywordCompletionTool {

	public static void main(String[] args) {
		//These keywords are not handled by EGLDefinedKeywordCompletions, mainly because of the difference between
		//syntax and semantic.  They are handled via reference completions, if necessary.
		List removeKeywords = new ArrayList();
		removeKeywords.add(IEGLConstants.KEYWORD_ANY);
		removeKeywords.add(IEGLConstants.KEYWORD_AND);
//		removeKeywords.add(IEGLConstants.KEYWORD_AS);
		removeKeywords.add(IEGLConstants.KEYWORD_BIGINT);
		removeKeywords.add(IEGLConstants.KEYWORD_BIN);
		removeKeywords.add(IEGLConstants.KEYWORD_BLOB);
		removeKeywords.add(IEGLConstants.KEYWORD_BOOLEAN);
		removeKeywords.add(IEGLConstants.KEYWORD_CHAR);
		removeKeywords.add(IEGLConstants.KEYWORD_CLOB);
		removeKeywords.add(IEGLConstants.KEYWORD_DATE);
		removeKeywords.add(IEGLConstants.KEYWORD_DBCHAR);
		removeKeywords.add(IEGLConstants.KEYWORD_DECIMAL);
		removeKeywords.add(IEGLConstants.KEYWORD_FALSE);
		removeKeywords.add(IEGLConstants.KEYWORD_FIELD);
		removeKeywords.add(IEGLConstants.KEYWORD_FLOAT);
		removeKeywords.add(IEGLConstants.KEYWORD_HEX);
		removeKeywords.add(IEGLConstants.KEYWORD_IN);
		removeKeywords.add(IEGLConstants.KEYWORD_INOUT);
		removeKeywords.add(IEGLConstants.KEYWORD_INT);
		removeKeywords.add(IEGLConstants.KEYWORD_INTERVAL);
		removeKeywords.add(IEGLConstants.KEYWORD_IS);
		removeKeywords.add(IEGLConstants.KEYWORD_ISA);
		removeKeywords.add(IEGLConstants.KEYWORD_LIKE);
		removeKeywords.add(IEGLConstants.KEYWORD_MATCHES);
		removeKeywords.add(IEGLConstants.KEYWORD_MBCHAR);
		removeKeywords.add(IEGLConstants.KEYWORD_MONEY);
		removeKeywords.add(IEGLConstants.KEYWORD_NEW);
		removeKeywords.add(IEGLConstants.KEYWORD_NULL);
		removeKeywords.add(IEGLConstants.KEYWORD_NO);
		removeKeywords.add(IEGLConstants.KEYWORD_NOT);
		removeKeywords.add(IEGLConstants.KEYWORD_SQLNULLABLE);
		removeKeywords.add(IEGLConstants.KEYWORD_NUM);
		removeKeywords.add(IEGLConstants.KEYWORD_NUMBER);
		removeKeywords.add(IEGLConstants.KEYWORD_NUMC);
		removeKeywords.add(IEGLConstants.KEYWORD_OR);
		removeKeywords.add(IEGLConstants.KEYWORD_OUT);
		removeKeywords.add(IEGLConstants.KEYWORD_PACF);
		removeKeywords.add(IEGLConstants.KEYWORD_SELF);
		removeKeywords.add(IEGLConstants.KEYWORD_SMALLFLOAT);
		removeKeywords.add(IEGLConstants.KEYWORD_SMALLINT);
		removeKeywords.add(IEGLConstants.KEYWORD_STRING);
		removeKeywords.add(IEGLConstants.KEYWORD_THIS);
		removeKeywords.add(IEGLConstants.KEYWORD_TIME);
		removeKeywords.add(IEGLConstants.KEYWORD_TIMESTAMP);
		removeKeywords.add(IEGLConstants.KEYWORD_TRUE);
		removeKeywords.add(IEGLConstants.KEYWORD_UNICODE);
		removeKeywords.add(IEGLConstants.KEYWORD_YES);

		StringBuffer stringBuffer = new StringBuffer();
		String prefixTabs = "			"; //$NON-NLS-1$
		System.out.println();
		System.out.print(prefixTabs);
		System.out.println("//EGL defined keyword completions"); //$NON-NLS-1$
		System.out.print(prefixTabs);
		System.out.print("//Generated :  "); //$NON-NLS-1$
		System.out.println(new Date().toString());
		System.out.print(prefixTabs);
		System.out.println("//These keyword completions should be generated by org.eclipse.edt.compiler.internal.dev.tools.EGLDefinedKeywordCompletionTool"); //$NON-NLS-1$
		String keywords[] = EGLKeywordHandler.getKeywordNames();
		for (int i = 0; i < keywords.length; i++) {
			if (removeKeywords.indexOf(keywords[i]) == -1) {
				String keyword = keywords[i];
				stringBuffer.setLength(0);
				stringBuffer.append(prefixTabs);
				stringBuffer.append("completionList.add(new EGLKeywordCompletion(NodeTypes."); //$NON-NLS-1$
				stringBuffer.append(keyword.toUpperCase());
				stringBuffer.append(", IEGLConstants.KEYWORD_"); //$NON-NLS-1$
				stringBuffer.append(keyword.toUpperCase());
				stringBuffer.append("));"); //$NON-NLS-1$
				System.out.println(stringBuffer);
			}
		}
	}
}
