/*******************************************************************************
 * Copyright Â© 2011, 2013 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package org.eclipse.edt.compiler.dev.tools;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.TreeSet;

import org.eclipse.edt.compiler.internal.EGLSystemWordHandler;


/**
 * @author jshavor
 *
 * output to the console IEGLConstants declarations for the EGL system words
 * copy and paste the results to IEGLConstants
 */
public class EGLSystemWordTool {

	public static void main(String[] args) {
		StringBuffer stringBuffer = new StringBuffer();
		System.out.println();
		System.out.println("	//EGL system words"); //$NON-NLS-1$
		System.out.print("	//Generated :  "); //$NON-NLS-1$
		System.out.println(new Date().toString());
		System.out.println("	//These system words should be generated by org.eclipse.edt.compiler.internal.dev.tools.EGLSystemWordTool"); //$NON-NLS-1$
		try {
			List systemWords = Arrays.asList( new TreeSet( EGLSystemWordHandler.getSystemWordNames() ).toArray() );			
			for (int i = 0; i < systemWords.size(); i++) {			
				String systemWord = (String) systemWords.get(i);
				stringBuffer.setLength(0);
				stringBuffer.append("	public static final String "); //$NON-NLS-1$
				stringBuffer.append("SYSTEM_WORD_"); //$NON-NLS-1$
				stringBuffer.append(systemWord.toUpperCase());
				stringBuffer.append(" = \""); //$NON-NLS-1$
				stringBuffer.append(systemWord);
				stringBuffer.append("\";	//$NON-NLS-1$"); //$NON-NLS-1$
				System.out.println(stringBuffer);
			}
		}
		catch( Exception e ) {
			e.printStackTrace();
		}
	}
}
