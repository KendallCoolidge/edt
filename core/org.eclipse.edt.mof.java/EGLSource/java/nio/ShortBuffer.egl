/*******************************************************************************
 * Copyright Â© 2013 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package java.nio;

import eglx.java.JavaObject;
import eglx.java.Object;
import eglx.lang.ExternalName;
import java.lang.Comparable;


externalType ShortBuffer extends Buffer, Comparable type JavaObject

    private constructor();

    static function allocate(arg0 int in) returns(ShortBuffer?);

    function arrayOffset() returns(int);

    function asReadOnlyBuffer() returns(ShortBuffer?);

    function compact() returns(ShortBuffer?);

    function compareTo(arg0 ShortBuffer? in) returns(int);

    function duplicate() returns(ShortBuffer?);

    function equals(arg0 Object? in) returns(boolean);

    function _get() returns(smallInt){@externalName{"get"}};

    function _get(arg0 int in) returns(smallInt){@externalName{"get"}};

    function hasArray() returns(boolean);

    function hashCode() returns(int);

    function isDirect() returns(boolean);

    function order() returns(ByteOrder?);

    function put(arg0 smallInt in) returns(ShortBuffer?);

    function put(arg0 int in, arg1 smallInt in) returns(ShortBuffer?);

    function put(arg0 ShortBuffer? in) returns(ShortBuffer?);

    function slice() returns(ShortBuffer?);

    function toString() returns(string?);
end

