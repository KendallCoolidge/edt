package lang.expression.parameter;

import org.eclipse.edt.eunit.runtime.LogResult;
import org.eclipse.edt.eunit.runtime.Test;

/* 
* @name 
* @title Function paramater declarations of type Decimal all valid modifiers passing any variables
* @keywords FOR
* @author EDT team
* @createDate 2011/10/05
* @description 
*  Function paramater declarations of type Decimal all valid modifiers passing any variables
*/
library DecimalParameters003
	toggleValue int;
	const updated decimal(5,2) = 543.21;
	const updatedAny any = 543.21;
	
	function testFunctionParameterIn1() {@Test}
		toggleValue = 1;
		localDec decimal(5,2) = 111.11;
		localAny any = localDec;
        switchOnInParameter(localAny);
    end	
    
  	function testFunctionParameterIn2() {@Test}
  		toggleValue = 2;
  		localDec decimal(5,2) = 222.22;
  		localAny any = localDec;
        switchOnInParameter(localAny);
    end	
    
    function testFunctionParameterIn3() {@Test}
    	toggleValue = 3;
    	localDec decimal(5,2) = 333.33;
    	localAny any = localDec;
        switchOnInParameter(localAny);
    end	

    function testFunctionParameterInWithUpdate() {@Test}
    	toggleValue = 3;
    	localDec decimal(5,2) = 333.33;
    	localAny any = localDec;
        updateInParameter(localAny);
        LogResult.assertTrue1(localDec == 333.33);
    end	
/*    
    function testFunctionParameterInOut1() {@Test}
    	toggleValue = 1;
    	localDec decimal(5,2) = 111.11;
    	localAny any = localDec;
        switchOnInOutParameter(localAny);
    end
    
    function testFunctionParameterInOut2() {@Test}
    	toggleValue = 2;
    	localDec decimal(5,2) = 222.22;
    	localAny any = localDec;
    	switchOnInOutParameter(localAny);
    end
           
    function testFunctionParameterInOut3() {@Test}         
    	toggleValue = 3;
    	localDec decimal(5,2) = 333.33;
    	localAny any = localDec;
	   	switchOnInOutParameter(localAny);
    end
    
    function testFunctionParameterInOutWithUpdate() {@Test}
    	localDec decimal(5,2) = 333.33;
    	localAny any = localDec;
        updateInOutParameter(localAny);
        LogResult.assertTrue1(localAny == updatedAny);
    end	
    
    function testFunctionParameterOutWithUpdate() {@Test}
	    localDec decimal(5,2) = 333.33;
	    localAny any = localDec;
	    updateOutParameter(localAny);    
		LogResult.assertTrue1(localAny == updatedAny);
    end	
 */       
	function testFunctionParameterDefault1() {@Test}
		toggleValue = 1;
		localDec decimal(5,2) = 111.11;
		localAny any = localDec;
        switchOnDefaultParameter(localAny);
    end
    
    function testFunctionParameterDefault2() {@Test}
   		toggleValue = 2;
   		localDec decimal(5,2) = 222.22;
   		localAny any = localDec;
        switchOnDefaultParameter(localAny);  
    end
    
    function testFunctionParameterDefault3() {@Test}  
    	toggleValue = 3;         
        localDec decimal(5,2) = 333.33;  
        localAny any = localDec;                         
        switchOnDefaultParameter(localAny);
    end
    
    function testFunctionParameterDefaultWithUpdate() {@Test}
    	localDec decimal(5,2) = 333.33;
    	localAny any = localDec;
        updateDefaultParameter(localAny);
        LogResult.assertTrue1(localDec == 333.33);
    end	
    
   	function testFunctionParameterConstIn1() {@Test}
		toggleValue = 1;
		localDec decimal(5,2) = 111.11;
		localAny any = localDec;
        switchOnConstInParameter(localAny);
    end
    
    function testFunctionParameterConstIn2() {@Test}
   		toggleValue = 2;
   		localDec decimal(5,2) = 222.22;
   		localAny any = localDec;
        switchOnConstInParameter(localAny);  
    end
    
    function testFunctionParameterConstIn3() {@Test}  
    	toggleValue = 3; 
    	localDec decimal(5,2) = 333.33;     
    	localAny any = localDec;                                      
        switchOnConstInParameter(localAny);
    end
    
    function testFunctionParameterConstInWithUpdate()                                            
        // called function always results in a validation error
    end
      
   	function testFunctionParameterConstInOut1() {@Test}
		toggleValue = 1;
		localDec decimal(5,2) = 111.11;
		localAny any = localDec;
        switchOnConstInOutParameter(localAny);
    end
    
    function testFunctionParameterConstInOut2() {@Test}
   		toggleValue = 2;
   		localDec decimal(5,2) = 222.22;
   		localAny any = localDec;
        switchOnConstInOutParameter(localAny);  
    end
    
    function testFunctionParameterConstInOut3() {@Test}  
    	toggleValue = 3;          
    	localDec decimal(5,2) = 333.33;  
    	localAny any = localDec;                                
        switchOnConstInOutParameter(localAny);
    end

    function testFunctionParameterConstInOutWithUpdate()                                            
        // called function always results in a validation error
    end
    
   	function testFunctionParameterConstDefault1() {@Test}
		toggleValue = 1;
		localDec decimal(5,2) = 111.11;
		localAny any = localDec;
        switchOnConstDefaultParameter(localAny);
    end
    
    function testFunctionParameterConstDefault2() {@Test}
   		toggleValue = 2;
   		localDec decimal(5,2) = 222.22;
   		localAny any = localDec;
        switchOnConstDefaultParameter(localAny);  
    end
    
    function testFunctionParameterConstDefault3() {@Test}  
    	toggleValue = 3;       
    	localDec decimal(5,2) = 333.33;   
    	localAny any = localDec;                                  
        switchOnConstDefaultParameter(localAny);
    end
    
    function testFunctionParameterConstDefaultWithUpdate()                                            
        // called function always results in a validation error
    end
   
    function switchOnInParameter(localLen decimal in)
    	resolved int = -1;
        case(localLen)
            when(111.11)
                resolved = 1;
            when(222.22)
                resolved = 2;
            otherwise
                resolved = 3;
        end
        LogResult.assertBigIntEqual1(toggleValue, resolved);
        toggleValue = 0;
    end

    function switchOnInOutParameter(localLen decimal inOut)
    	resolved int = -1;
        case(localLen)
            when(111.11)
                resolved = 1;
            when(222.22)
                resolved = 2;
            otherwise
                resolved = 3;
        end
        LogResult.assertBigIntEqual1(toggleValue, resolved);
        toggleValue = 0;
    end
    
    function switchOnDefaultParameter(localLen decimal)
    	resolved int = -1;
        case(localLen)
            when(111.11)
                resolved = 1;
            when(222.22)
                resolved = 2;
            otherwise
                resolved = 3;
        end
        LogResult.assertBigIntEqual1(toggleValue, resolved);
        toggleValue = 0;
    end
    
   function switchOnConstDefaultParameter(localLen decimal const)
    	resolved int = -1;
        case(localLen)
            when(111.11)
                resolved = 1;
            when(222.22)
                resolved = 2;
            otherwise
                resolved = 3;
        end
        LogResult.assertBigIntEqual1(toggleValue, resolved);
        toggleValue = 0;
    end

    function switchOnConstInParameter(localLen decimal const in)
    	resolved int = -1;
        case(localLen)
            when(111.11)
                resolved = 1;
            when(222.22)
                resolved = 2;
            otherwise
                resolved = 3;
        end
        LogResult.assertBigIntEqual1(toggleValue, resolved);
        toggleValue = 0;
    end
 
    function switchOnConstInOutParameter(localLen decimal const inOut)
    	resolved int = -1;
        case(localLen)
            when(111.11)
                resolved = 1;
            when(222.22)
                resolved = 2;
            otherwise
                resolved = 3;
        end
        LogResult.assertBigIntEqual1(toggleValue, resolved);
        toggleValue = 0;
    end
 
    function updateInParameter(localLen decimal in)
    	localLen = 543.21;
    end
    
    function updateInOutParameter(localLen decimal inOut)
    	localLen = 543.21;
    end

    function updateOutParameter(localLen decimal out)
    	localLen = 543.21;
    end
        
    function updateDefaultParameter(localLen decimal )
    	localLen = 543.21;
    end

end
