package api.eglx_lang;

import org.eclipse.edt.eunit.runtime.Test;

library isa31PassToAnyLIB

	isA_WS isA_WS;
	use isaLIB;
	isA31_DEC_D0 isA31_DEC_D0;
	isA31_DEC_Dx isA31_DEC_Dx;
	
Function runBasicDecimalISAFunction001() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.isA31_DEC_D0.DECIMAL19D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 19;  isA_WS.myDec = 0; 
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL19D0);  //decimal(19,0))
end
	
Function runBasicDecimalISAFunction002() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.isA31_DEC_D0.DECIMAL20D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 20;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL20D0);  //decimal(20,0))
end
	
Function runBasicDecimalISAFunction003() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.isA31_DEC_D0.DECIMAL21D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 21;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL21D0);  //decimal(21,0))
end
	
Function runBasicDecimalISAFunction004() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.isA31_DEC_D0.DECIMAL22D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 22;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL22D0);  //decimal(22,0))
end
	
Function runBasicDecimalISAFunction005() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.isA31_DEC_D0.DECIMAL23D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 23;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL23D0);  //decimal(23,0))
end
	
Function runBasicDecimalISAFunction006() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL24D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 24;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL24D0);  //decimal(24,0))
end
	
Function runBasicDecimalISAFunction007() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL25D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 25;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL25D0);  //decimal(25,0))
end
	
Function runBasicDecimalISAFunction008() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL26D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 26;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL26D0);  //decimal(26,0))
end
	
Function runBasicDecimalISAFunction009() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL27D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 27;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL27D0);  //decimal(27,0))
end
	
Function runBasicDecimalISAFunction010() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL28D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 28;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL28D0);  //decimal(28,0))
  end
	
Function runBasicDecimalISAFunction011() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL29D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 29;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL29D0);  //decimal(29,0))
end
	
Function runBasicDecimalISAFunction012() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL30D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 30;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL30D0);  //decimal(30,0))
end
	
Function runBasicDecimalISAFunction013() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL31D0");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL31D0);  //decimal(31,0))
end // end isA_PassToAny_31_DEC
	
Function runBasicDecimalISAFunction014() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";	
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D00");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_DX(isA31_DEC_Dx.DECIMAL31D00);  //decimal(31,0))
end
	
Function runBasicDecimalISAFunction015() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D01");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 1;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D01);  //decimal(31,1))
end
	
Function runBasicDecimalISAFunction016() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D02");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 2;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D02);  //decimal(31,2))
end
	
Function runBasicDecimalISAFunction017() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D03");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 3;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D03);  //decimal(31,3))
end
	
Function runBasicDecimalISAFunction018() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D04");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 4;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D04);  //decimal(31,4))
end
	
Function runBasicDecimalISAFunction019() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D05");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 5;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D05);  //decimal(31,5))
end
	
Function runBasicDecimalISAFunction020() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D06");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 6;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D06);  //decimal(31,6))
end
	
Function runBasicDecimalISAFunction021() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D07");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 7;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D07);  //decimal(31,7))
end
	
Function runBasicDecimalISAFunction022() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D08");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 8;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D08);  //decimal(31,8))
end
	
Function runBasicDecimalISAFunction023() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D09");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 9;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D09);  //decimal(31,9))
end
	
Function runBasicDecimalISAFunction024() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D10");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 10;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D10);  //decimal(31,10))
end
	
Function runBasicDecimalISAFunction025() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D11");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 11;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D11);  //decimal(31,11))
end
	
Function runBasicDecimalISAFunction026() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D12");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 12;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D12);  //decimal(31,12))
end
	
Function runBasicDecimalISAFunction027() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D13");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 13;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D13);  //decimal(31,13))
end
	
Function runBasicDecimalISAFunction028() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D14");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 14;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D14);  //decimal(31,14))
end
	
Function runBasicDecimalISAFunction029() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D15");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 15;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D15);  //decimal(31,15))
end
	
Function runBasicDecimalISAFunction030() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D16");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 16;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D16);  //decimal(31,16))
end
	
Function runBasicDecimalISAFunction031() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D17");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 17;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D17);  //decimal(31,17))
end
	
Function runBasicDecimalISAFunction032() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D18");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 18;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D18);  //decimal(31,18))
end
	
Function runBasicDecimalISAFunction033() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D19");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 19;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D19);  //decimal(31,19))
end
	
Function runBasicDecimalISAFunction034() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D20");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 20;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D20);  //decimal(31,20))
end
	
Function runBasicDecimalISAFunction035() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D21");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 21;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D21);  //decimal(31,21))
end
	
Function runBasicDecimalISAFunction036() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D22");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 22;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D22);  //decimal(31,22))
end
	
Function runBasicDecimalISAFunction037() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D23");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 23;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D23);  //decimal(31,23))
end
	
Function runBasicDecimalISAFunction038() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D24");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 24;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D24);  //decimal(31,24))
end
	
Function runBasicDecimalISAFunction039() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D25");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 25;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D25);  //decimal(31,25))
end
	
Function runBasicDecimalISAFunction040() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D216");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 26;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D26);  //decimal(31,26))
end
	
Function runBasicDecimalISAFunction041() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D27");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 27;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D27);  //decimal(31,27))
end
	
Function runBasicDecimalISAFunction042() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D28");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 28;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D28);  //decimal(31,28))
end
	
Function runBasicDecimalISAFunction043() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D29");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 29;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D29);  //decimal(31,29))
end
	
Function runBasicDecimalISAFunction044() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D30");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 30;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D30);  //decimal(31,30))
end
	
Function runBasicDecimalISAFunction045() {@Test}
  isA_WS.EXPECTED_COMPARE = "==";
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D31");
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 31;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D31);  //decimal(31,31))
end // end isA_PassToAny_31_DEC_D
	
Function runBasicDecimalISAFunction046() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL19D0 - is it a decimal(18,0)");
  isA_WS.EXPECTED_COMPARE = "!=";
  isA_WS.myType = "DEC ";  isA_WS.myLen = 18;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL19D0);  //decimal(18,0))
end
	
Function runBasicDecimalISAFunction047() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL19D0 - is it a decimal(19,0)");
  isA_WS.EXPECTED_COMPARE = "==";  
  isA_WS.myType = "DEC ";  isA_WS.myLen = 19;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL19D0);  //decimal(19,0))
end
	
Function runBasicDecimalISAFunction048() {@Test}  
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL19D0 - is it a decimal(20,0)");
  isA_WS.EXPECTED_COMPARE = "!=";  
  isA_WS.myType = "DEC ";  isA_WS.myLen = 20;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL19D0);  //decimal(20,0))
end
	
Function runBasicDecimalISAFunction049() {@Test}      
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL30D0 - is it a decimal(29,0)");
  isA_WS.EXPECTED_COMPARE = "!=";  
  isA_WS.myType = "DEC ";  isA_WS.myLen = 29;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL30D0);  //decimal(29,0))
end
	
Function runBasicDecimalISAFunction050() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL30D0 - is it a decimal(30,0)");
  isA_WS.EXPECTED_COMPARE = "==";
  isA_WS.myType = "DEC ";  isA_WS.myLen = 30;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL30D0);  //decimal(30,0))
end
	
Function runBasicDecimalISAFunction051() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_D0.DECIMAL30D0 - is it a decimal(31,0)");
  isA_WS.EXPECTED_COMPARE = "!=";  
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_D0(isA31_DEC_D0.DECIMAL30D0);  //decimal(31,0))
end
	
Function runBasicDecimalISAFunction052() {@Test}  
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D01 - is it a decimal(31,0)");
  isA_WS.EXPECTED_COMPARE = "!=";
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 0;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D01);  //decimal(31,0))
end
	
Function runBasicDecimalISAFunction053() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D01 - is it a decimal(31,1)");
  isA_WS.EXPECTED_COMPARE = "==";
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 1;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D01);  //decimal(31,1))
end
	
Function runBasicDecimalISAFunction054() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D01 - is it a decimal(31,2)");
  isA_WS.EXPECTED_COMPARE = "!=";
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 2;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D01);  //decimal(31,2))
end
	
Function runBasicDecimalISAFunction055() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D30 - is it a decimal(31,29)");
  isA_WS.EXPECTED_COMPARE = "!=";
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 29;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D30);  //decimal(31,29))
end
	
Function runBasicDecimalISAFunction056() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D30 - is it a decimal(31,30)");
  isA_WS.EXPECTED_COMPARE = "==";
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 30;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D30);  //decimal(31,30))
end
	
Function runBasicDecimalISAFunction057() {@Test}
  isaLIB.setVariation("isA - PassToAny - isA31_DEC_Dx.DECIMAL31D30 - is it a decimal(31,31)");
  isA_WS.EXPECTED_COMPARE = "!=";
  isA_WS.myType = "DEC ";  isA_WS.myLen = 31;  isA_WS.myDec = 31;
  isaAnyParm31_DEC_Dx(isA31_DEC_Dx.DECIMAL31D30);  //decimal(31,31))	
end // end isA_PassToAny_31_DEC_BOUNDARY

function isaAnyParm31_DEC_D0(myNumber any in)
    isA_WS.RESULT_COMPARE = "!=";
    isA_WS.hadFailure = "N";
    case(isA_WS.myType)
        when("DEC ")
            case(isA_WS.myLen)
                when(19)
                    if(myNumber isa decimal(19, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(20)
                    if(myNumber isa decimal(20, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(21)
                    if(myNumber isa decimal(21, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(22)
                    if(myNumber isa decimal(22, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(23)
                    if(myNumber isa decimal(23, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(24)
                    if(myNumber isa decimal(24, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(25)
                    if(myNumber isa decimal(25, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(26)
                    if(myNumber isa decimal(26, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(27)
                    if(myNumber isa decimal(27, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(28)
                    if(myNumber isa decimal(28, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(29)
                    if(myNumber isa decimal(29, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(30)
                    if(myNumber isa decimal(30, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end
                when(31)
                    if(myNumber isa decimal(31, 0))
                        isA_WS.RESULT_COMPARE = "==";
                    end                	
            end
        otherwise
        	fullDetails string = "BUG in isaAnyNumber for " + isA_WS.myType;
            isaLIB.reportFailureWithText(fullDetails);
            isA_WS.hadFailure = "Y";
    end
    if(isA_WS.hadFailure == "N")
        isaLIB.compareIF(isA_WS.RESULT_COMPARE, isA_WS.EXPECTED_COMPARE);
    end
end  // end isaAnyParm31_DEC_D0

function isaAnyParm31_DEC_Dx(myNumber any in)
    isA_WS.RESULT_COMPARE = "!=";
    isA_WS.hadFailure = "N";
    case(isA_WS.myType)
        when("DEC ")
                    case(isA_WS.myDec)
                        when(0)
                            if(myNumber isa decimal(31, 0))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(1)
                            if(myNumber isa decimal(31, 1))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(2)
                            if(myNumber isa decimal(31, 2))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(3)
                            if(myNumber isa decimal(31, 3))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(4)
                            if(myNumber isa decimal(31, 4))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(5)
                            if(myNumber isa decimal(31, 5))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(6)
                            if(myNumber isa decimal(31, 6))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(7)
                            if(myNumber isa decimal(31, 7))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(8)
                            if(myNumber isa decimal(31, 8))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(9)
                            if(myNumber isa decimal(31, 9))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(10)
                            if(myNumber isa decimal(31, 10))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(11)
                            if(myNumber isa decimal(31, 11))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(12)
                            if(myNumber isa decimal(31, 12))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(13)
                            if(myNumber isa decimal(31, 13))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(14)
                            if(myNumber isa decimal(31, 14))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(15)
                            if(myNumber isa decimal(31, 15))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(16)
                            if(myNumber isa decimal(31, 16))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(17)
                            if(myNumber isa decimal(31, 17))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(18)
                            if(myNumber isa decimal(31, 18))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(19)
                            if(myNumber isa decimal(31, 19))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(20)
                            if(myNumber isa decimal(31, 20))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(21)
                            if(myNumber isa decimal(31, 21))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(22)
                            if(myNumber isa decimal(31, 22))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(23)
                            if(myNumber isa decimal(31, 23))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(24)
                            if(myNumber isa decimal(31, 24))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(25)
                            if(myNumber isa decimal(31, 25))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(26)
                            if(myNumber isa decimal(31, 26))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(27)
                            if(myNumber isa decimal(31, 27))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(28)
                            if(myNumber isa decimal(31, 28))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(29)
                            if(myNumber isa decimal(31, 29))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(30)
                            if(myNumber isa decimal(31, 30))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                        when(31)
                            if(myNumber isa decimal(31, 31))
                                isA_WS.RESULT_COMPARE = "==";
                            end
                    end
        otherwise
            fullDetails string = "BUG in isaAnyNumber for " + isA_WS.myType;
            isaLIB.reportFailureWithText(fullDetails);
            isA_WS.hadFailure = "Y";
    end
    if(isA_WS.hadFailure == "N")
        isaLIB.compareIF(isA_WS.RESULT_COMPARE, isA_WS.EXPECTED_COMPARE);
    end
end  // end isaAnyParm31_DEC_Dx
	
end  // end PassingAny31Library
