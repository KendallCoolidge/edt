package gen.javascript;

import org.eclipse.edt.eunit.runtime.LogResult;
import org.eclipse.edt.eunit.runtime.Test;

/*
* @name TestFuncInvocation05Lib
* @title The function test program for the EGL Function Invocation
* @keywords EGL Function Invocation
* @author EDT team
* @createDate 2011/08/09
* @description 
* This library is designed to test the EGL Function Invocation
*/

library TestFuncInvocation05Lib

    function testLocalInParameters4(){@Test{targetLang =[JAVASCRIPT]}}
        exType ExType = new ExType("abc");
        localInExternal(exType);
        LogResult.logStdOut("Local function IN externaltype parameter - 4");
        LogResult.assertStringEqual1("cde", exType.getData());
    end

    function testLibraryInParameters4(){@Test{targetLang =[JAVASCRIPT]}}
        exType ExType = new ExType("abc");
        LibraryInExternal(exType);
        LogResult.logStdOut("Library function IN externaltype parameter - 4");
        LogResult.assertStringEqual1("cde", exType.getData());
    end

    function localInExternal(e ExType in)
        LogResult.logStdOut("Local function IN externaltype parameter - 4a");
        LogResult.assertTrue1((e != null &&(e.getData() == "abc")));
        if(e == null)
        //LogResult.expect("null", "not null");
        end
        e.setData("cde");
    end

    function libraryInExternal(e ExType in)
        LogResult.logStdOut("Library function IN externaltype parameter - 4a");
        LogResult.assertTrue1((e != null &&(e.getData() == "abc")));
        if(e == null)
        //LogResult.expect("null", "not null");
        end
        e.setData("cde");
    end

end

externalType ExType type JavaScriptObject{relativePath = "FVT/functionInvocation", externalname = "ExType"}

    constructor(s string in);

    function getData() returns(string);

    function setData(data string in);

    function setData(data string in, i int in);

end