package server.host.programs.data.records;

import eglx.jtopen.annotations.StructArray;
import eglx.jtopen.annotations.StructBin2;
import eglx.jtopen.annotations.StructBin4;
import eglx.jtopen.annotations.StructBin8;
import eglx.jtopen.annotations.StructDate;
import eglx.jtopen.annotations.StructFloat4;
import eglx.jtopen.annotations.StructFloat8;
import eglx.jtopen.annotations.StructPackedDecimal;
import eglx.jtopen.annotations.StructText;
import eglx.jtopen.annotations.StructTime;
import eglx.jtopen.annotations.StructTimestamp;
import eglx.jtopen.annotations.StructUnsignedBin2;
import eglx.jtopen.annotations.StructUnsignedBin4;
import eglx.jtopen.annotations.StructZonedDecimal;
import eglx.services.Encoding;



record Record13
	rec Record3;
	char20 string[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructText{length = 20, preserveTrailingSpaces = true}}}; 
	lchar20 string(20)[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructText{preserveTrailingSpaces = true}}}; 
	unicode20 string[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructText{length = 20, encoding = "UTF-16BE", preserveTrailingSpaces = true}}}; 
	lunicode20 string(20)[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructText{encoding = "UTF-16BE", preserveTrailingSpaces = true}}}; 
	bin2sign smallint[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructBin2{}}};
	bin4sign int[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructBin4{}}};
	bin8sign bigint[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructBin8{}}};
	dec112 decimal(11,2)[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructPackedDecimal{}}};
	dec15 decimal(15)[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructPackedDecimal{}}};
	num6 decimal(6)[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructZonedDecimal {}}};
	num103 decimal(10,3)[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructZonedDecimal {}}};
	bin2 int[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructUnsignedBin2{}}};
	bin4 bigint[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructUnsignedBin4{}}};
	date1 date[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructDate{}}};
	date2 date[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructDate {ibmiFormat=com.ibm.as400.access.AS400Date.FORMAT_USA}}};
	date3 date[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructDate {ibmiFormat=com.ibm.as400.access.AS400Date.FORMAT_USA, ibmiSeparatorChar = null}}};
	time1 time[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructTime{}}};
	time2 time[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructTime {ibmiFormat=com.ibm.as400.access.AS400Time.FORMAT_EUR}}};
	time3 time[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructTime {ibmiFormat=com.ibm.as400.access.AS400Time.FORMAT_EUR, ibmiSeparatorChar = null}}};
	timestamp1 timestamp("yyyyMMddHHmmss")[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructTimestamp{}}};
	float4 smallfloat[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructFloat4{}}};
	float8 float[]{@StructArray {elementCount = 4, returnCountVariable = validCount, elementTypeAnnotation = @StructFloat8{}}};
	recA Record3[]{@StructArray{elementCount = 4, returnCountVariable = validCount}};
	validCount int;
end

