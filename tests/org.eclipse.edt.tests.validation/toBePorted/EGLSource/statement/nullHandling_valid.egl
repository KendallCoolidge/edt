/*******************************************************************************
 * Copyright Â© 2012, 2013 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
//NO_ERROR

program nullhandling_valid {I4GLItemsNullable=yes}
	myfixedsql fixedsqlrec;
	myflexsql flexsqlrec;
	function main()
		if (myflexsql.field1 == null)
		end
		if (myflexsql.field2 == null)
		end


		myflexsql.field1 = null;
		myflexsql.field2 = null;

		function2(myflexsql.field1);  
		function2(myflexsql.field2);

	end
	function function2 (nullParm1 int ?)
		function3 (nullParm1);
	end
	function function3 (nullParm2 int ?)
	end
end
record indexrecd type indexedrecord {filename = "a", keyItem = field1}
	10 field1 int;
	10 field2 char(4);
end
record fixedsqlrec type sqlrecord
	10 field1 int {isSqlNullable = yes};
	10 field2 int {isSqlNullable = no};
end
record flexsqlrec type sqlrecord {I4GLItemsNullable=yes}
	 field1 int {isSqlNullable = yes};
	 field2 int {isSqlNullable = yes};
end

Record NullableNumericRecord type SQLRecord
	bin18Dec10 bin(18,10){isSqlNullable=yes};	
	num4Dec0 num(4,0){isSqlNullable=yes};
	num9Dec2 num(9,2){isSqlNullable=yes};
	intervalItem interval("yyyyMM"){isSqlNullable=yes};
end

program Problem29 type basicProgram {I4GLItemsNullable=yes}
	myInterval IntervalNullable;
	errMsg String;
	
	function main()
		if ( myInterval == NULL)
			errMsg = "Unexpected value of true testing myInterval for IS NULL";
		end		
		myInterval = NULL;
		if ( myInterval != NULL)
			errMsg = "Unexpected value of true testing myInterval for NOT NULL";
		end		
	end
	
end

DataItem IntervalNullable interval("yyyyMM") end
