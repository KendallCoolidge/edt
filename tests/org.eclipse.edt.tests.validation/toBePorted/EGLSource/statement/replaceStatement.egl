/*******************************************************************************
 * Copyright Â© 2012 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
// validate (1):
// 1 A FROM result set identifier clause is required when there are multiple selects for the same record that have different "for update of" clauses. {6634, EGLMESSAGE_NO_RESULT_SET_ID_FOR_MULTIPLE_CURSOR_OPEN}
// 1 The {1} clause is not allowed on a replace statement for a relative or indexed record. {6635, EGLMESSAGE_CLAUSES_OR_OPTIONS_ON_REPLACE_WITH_NON_SQL_REC}
// 1 The {1} clause is not allowed on a replace statement for a relative or indexed record. {6635, EGLMESSAGE_CLAUSES_OR_OPTIONS_ON_REPLACE_WITH_NON_SQL_REC}
// 1 Invalid target {1}. The target must be an SQL, relative, or indexed record variable. {6636, EGLMESSAGE_REPLACE_STATEMENT_TARGET_NOT_RECORD}

program MyProj (pcb1 int ){@DLI { psb = psb,
         handleHardDLIErrors = yes,
         pcbParms =/*["", "pcb1", "pcb2", "",""]*/[pcb1, pcb2] }	
         // when called from APPLA_valid pcb1 is pcbC1 and receives pcbA3 
         //							     pcb2 is pcbC2 and receives pcbA5
         // when called from APPLB_valid pcb1 is pcbC1 and receives pcbB4 
         //							     pcb2 is pcbC2 and receives pcbB1
         // this program cannot use pcbC3 or pcbC4 
  }
	 
	function main()
		course Course;
		coursePCB DB_PCBRecord;
		sqlRec sqlRec;
		sqlrec2 sqlrec;
		courses Course[]; 
		sqlrecs sqlrec[];
		indxrec IndxRecord;
		mqrec MQRec;
		relrec relrecord;
		srec	srecord;
		name string;
		course2 Course;
		sqlflex sqlRecFLEX;
		a,b,c int;
		d,e,f int;
		myany any;
		
		open resultsetid for sqlrec;
		
		replace indxrec with #sql{ update tablex set a = "1"};// 1 The with sql clause is not allowed on a replace statement for a relative, indexed, or DL/I segment record		{6635, EGLMESSAGE_CLAUSES_OR_OPTIONS_ON_REPLACE_WITH_NON_SQL_REC}
		replace relrec with #sql{ update tablex set a = "1"};// 1 The with sql clause is not allowed on a replace statement for a relative, indexed, or DL/I segment record		{6635, EGLMESSAGE_CLAUSES_OR_OPTIONS_ON_REPLACE_WITH_NON_SQL_REC}
		replace indxrec from resultsetid;// 1 The from clause is not allowed on a replace statement for a relative, indexed, or DL/I segment record		{6635, EGLMESSAGE_CLAUSES_OR_OPTIONS_ON_REPLACE_WITH_NON_SQL_REC}
		replace relrec from resultsetid;// 1 The from clause is not allowed on a replace statement for a relative, indexed, or DL/I segment record		{6635, EGLMESSAGE_CLAUSES_OR_OPTIONS_ON_REPLACE_WITH_NON_SQL_REC}
		replace myany;// 1  Invalid target myany. The target of a replace statement must be an SQL, relative, DL/I segment, or indexed record variable		 {6636, EGLMESSAGE_REPLACE_STATEMENT_TARGET_NOT_RECORD}
		replace sqlrecs; // 1  Invalid target sqlrecs. The target of a replace statement must be an SQL, relative, DL/I segment, or indexed record variable		 {6636, EGLMESSAGE_REPLACE_STATEMENT_TARGET_NOT_RECORD}
		replace name;// 1  Invalid target name. The target of a replace statement must be an SQL, relative, DL/I segment, or indexed record variable		 {6636, EGLMESSAGE_REPLACE_STATEMENT_TARGET_NOT_RECORD}
		replace mqrec;// 1  Invalid target mqrec. The target of a replace statement must be an SQL, relative, DL/I segment, or indexed record variable		 {6636, EGLMESSAGE_REPLACE_STATEMENT_TARGET_NOT_RECORD}
		replace course usingPCB pcb11;// 1 The usingPCB item must be defined in the program PSB 
		
		replace indxrec;// 0
		replace relrec;// 0
		replace sqlrec;// 0
		replace sqlrec with #sql{ update tablex set a = "1"};// 0
		replace sqlrec from resultsetid;//0
		replace sqlrec with #sql{ update tablex set a = "1"} from resultsetid;// 0
		replace course usingPCB pcb1;// 0
	end
end

Program DLIMainProg {@DLI{}}
	
	student Student;
		
	function main()
		replace student; //0 
	end
end

Record Student type DLISegment end


Program My2Proj  
	 
	function main()
		course Course;
		course2 Course;
		coursePCB DB_PCBRecord;
		courses Course[]; 

		add courses; // 1 DL/I I/O is not allowed unless the program specifies the DLI and PSB properties {7903}
		add course; // 1 DL/I I/O is not allowed unless the program specifies the DLI and PSB properties {7903}
		add course with #dli{ ISRT COURSE }; // 1 DL/I I/O is not allowed unless the program specifies the DLI and PSB properties {7903}
		add course with #dli{}; // 2 A modified DL/I call be must be specified  | DL/I I/O is not allowed unless the program specifies the DLI and PSB properties{7898}

	end
end

Library MyLib
function addfunc ()
		course Course;
		coursePCB DB_PCBRecord;
		courses Course[]; 
		add course; // 1 DL/I I/O is not allowed unless the program specifies the DLI and PSB properties {7903}
		
end
end

Record Course type DLISegment end
Record sqlRec type sqlRecord
	10 item1 int;
end

Record sqlRecFLEX type sqlRecord
	item1 int;
end


Record IndxRecord type indexedrecord { filename = "myfile",keyitem = "item1"}
	10 item1 int;
end

record MQRec type MQRecord { queuename = "www"}
10 item1 int;
end

record relrecord type relativerecord { filename = "myfile",keyitem = "item1"}
10 item1 int;
end

record srecord type serialrecord{ filename = "myfile"}
10 item1 int;
end
