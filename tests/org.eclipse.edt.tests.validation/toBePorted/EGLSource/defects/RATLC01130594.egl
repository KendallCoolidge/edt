/*******************************************************************************
 * Copyright Â© 2012 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
/*
 * The following should not be able to specify this property: blob, clob,
 * boolean (and types with isBoolean=yes), and interval. Also, per Alex,
 * the type of the item specifying the validatorDataTable property should
 * match the type of the column(s) in the table. For matchValid and
 * matchInvalid, it would need to match the first column type, while for
 * rangeCheck it needs to match the first and second column types. The
 * exception to this, like with selectedValueItem, is that a string field
 * should be considered compatible with a char column.
 */

DataTable intTbl type MatchValidTable {
	contents=[[5]]
}
	col1 int;
end

DataTable intTblA type MatchInvalidTable {
	contents=[[5]]
}
	col1 int;
end

DataTable charTbl type MatchValidTable {
	contents=[["abc"]]
}
	col1 char(4);
end

DataTable charTblA type MatchInvalidTable {
	contents=[["abc"]]
}
	col1 char(4);
end

DataTable intervalTbl type MatchValidTable {
	contents=[["abc"]]
}
	col1 interval("yyyy");
end

DataTable blobTbl type MatchValidTable {
	contents=[["abc"]]
}
	col1 blob;
end

DataTable clobTbl type MatchValidTable {
	contents=[["abc"]]
}
	col1 clob;
end

DataTable booleanTbl type MatchValidTable {
	contents=[[yes]]
}
	col1 boolean;
end

DataTable intTbl2 type RangeChkTable {
	contents=[[5,10]]
}
	col1 int;
	col2 int;
end

DataTable intTbl3 type RangeChkTable {
	contents=[[5,"10"]]
}
	col1 int;
	col2 char(4);
end

DataTable charTbl2 type RangeChkTable {
	contents=[["abc","xyz"]]
}
	col1 char(4);
	col2 char(4);
end

DataTable charTbl3 type RangeChkTable {
	contents=[["abc","xyz"]]
}
	col1 char(4);
	col2 string;
end

Handler myPage type JSFHandler
	item1 int {validatorDataTable = intTbl};					//0
	item1a int {validatorDataTable = intTblA};					//0
	item2 char(4) {validatorDataTable = charTbl};				//0
	item2a char(4) {validatorDataTable = charTblA};				//0
	item3 interval("yyyy") {validatorDataTable = intervaltbl};	//1
	item4 boolean {validatorDataTable = booleantbl};			//1
	item5 blob {validatorDataTable = blobtbl};					//1
	item6 clob {validatorDataTable = clobtbl};					//1
	item7 char(4) {validatorDataTable = charTbl, isBoolean=yes};//1
	
	item8 int {validatorDataTable = intTbl2};					//0
	item9 int {validatorDataTable = intTbl3};					//0
	
	item10 char(4) {validatorDataTable = charTbl2};				//0
	item11 char(4) {validatorDataTable = charTbl3};				//0
	
	item12 int {validatorDataTable = charTbl};					//0
	item12a int {validatorDataTable = charTblA};				//0
	item13 char(4) {validatorDataTable = intTbl};				//0
	item13a char(4) {validatorDataTable = intTblA};				//0
	
	item14 char(4) {validatorDataTable = intTbl3};				//0
	
	item15 char(10)[2] { ValidatorDataTable = charTbl };		//0
	item16 char(4)[2] {validatorDataTable = charTbl2};			//0
end
