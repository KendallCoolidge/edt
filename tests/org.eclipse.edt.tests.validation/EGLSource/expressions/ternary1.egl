package expressions;

library ternary1

	function functionName()
		a any?;
		a2 any?;
		x int;
		s string;
		
		x = true ? 10 - 1 : 20; //0
		x = x isa int?[] ? [] as int?[] : 20; //0
		x = a isa boolean[] ? 10 : 20; //0
		x = (5 == 4) ? 2 : 1; //0
		x = 5 == 4 ? 2 : 1; //0
		x = getValue() > 8 ? getValue() : 1 + getValue() * 22 - 2; //0
		a = false ? new int?[] : a2; //0
		a = true ? new int[] : a2; //0
		s = 56 > 22 ? "a" : "bc"; //0
		
		a = doNotExist ? 1 : 3; //1
		a = true ? doNotExist : 3; //1
		a = true ? 10 : doNotExist; //1
		
		// conditional must be boolean
		x = 3 ? new date : 2; //1
		x = "true" ? new date : 2; //1
		
		// type of ternary is ANY, it's not based on the types of the exprs
		if (true ? true : false) end //1
		if ((true ? true : false) as boolean) end //0
		
		setValueIn(x > 10 ? x : a); //0
		setValueInout(x > 10 ? x : a); //1
		
		// dual-layer ternary
		x = getValue() > 9 ? x > 9 || x % 4 in x ? getValue() - 7 : x * 10 : getValue() + 99; //0
		x = getValue() ? x > 9 || x % 4 in x ? getValue() - 7 : x * 10 : getValue() + 99; //1
	end
	
	function getValue() returns(int)
	end
	
	function setValueIn(i int in)
	end
	function setValueInout(i int inout)
	end
	
end

record rec
	i int;
end