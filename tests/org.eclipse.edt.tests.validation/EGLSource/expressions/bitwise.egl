/*******************************************************************************
 * Copyright Â© 2013 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package expressions;

// basic library
library bitwise
	
	function negate()
		i int;
		si smallint;
		a any?;
		s string;
		r bitrec;
		
		i = ~si; //0
		si = ~i; //0
		i = ~2343; //0
		si = ~2; //0
		i = ~funcIn(~i); //0
		i = ~funcInout(i); //0
		
		a = ~"23"; //1
		a = ~a; //1
		a = ~s; //1
		a = ~r; //1
		
		funcIn(~i); //0
		funcIn(~si); //0
		funcIn(~222); //0
		
		funcInout(~i); //1
		funcInout(~si); //1
		funcInout(~222); //1
	end
	
	function shiftLeft()
		i int;
		si smallint;
		s string;
		a any?;
		r bitrec;
		
		i = si << 2; // 0
		i = i << si; // 0
		si = i << 2; // 0
		si = si << i; // 0
		si = getInt() << getSmallint(); //0
		a = s << 2; //0
		a = 2 << a; //1
		a = 2 << r; //1
		
		i <<= 2; // 0
		i <<= si; // 0
		i <<= i; // 0
		i <<= a; // 1
		i <<= s; // 0
		i <<= "2"; // 0
		i <<= getString(); //0
		i <<= r; //1
		i <<= getRec(); //1
		
		si <<= 2; // 0
		si <<= i; // 0
		si <<= si; // 0
		si <<= getInt(); // 0
		si <<= a; // 1
		si <<= s; // 0
		si <<= "2"; // 0
		si <<= r; //1
		si <<= getRec(); //1
		
		s <<= 2; //0
		a <<= 2; //1
		r <<= 2; //1
	end
	
	function shiftRightArithmetic()
		i int;
		si smallint;
		s string;
		a any?;
		r bitrec;
		
		i = si >> 2; // 0
		i = i >> si; // 0
		si = i >> 2; // 0
		si = si >> i; // 0
		si = getInt() >> getSmallint(); //0
		a = s >> 2; //0
		a = 2 >> a; //1
		a = 2 >> r; //1
		
		i >>= 2; // 0
		i >>= si; // 0
		i >>= i; // 0
		i >>= a; // 1
		i >>= s; // 0
		i >>= "2"; // 0
		i >>= getString(); //0
		i >>= r; //1
		i >>= getRec(); //1
		
		si >>= 2; // 0
		si >>= i; // 0
		si >>= si; // 0
		si >>= getInt(); // 0
		si >>= a; // 1
		si >>= s; // 0
		si >>= "2"; // 0
		si >>= r; //1
		si >>= getRec(); //1
		
		
		s >>= 2; //0
		a >>= 2; //1
		r >>= 2; //1
	end
	
	function shiftRightLogical()
		i int;
		si smallint;
		s string;
		a any?;
		r bitrec;
		
		i = si >>> 2; // 0
		i = i >>> si; // 0
		si = i >>> 2; // 0
		si = si >>> i; // 0
		si = getInt() >>> getSmallint(); //0
		a = s >>> 2; //0
		a = 2 >>> a; //1
		a = 2 >>> r; //1
		
		i >>>= 2; // 0
		i >>>= si; // 0
		i >>>= i; // 0
		i >>>= a; // 1
		i >>>= s; // 0
		i >>>= "2"; // 0
		i >>>= r; //1
		i >>>= getRec(); //1
		
		si >>>= 2; // 0
		si >>>= i; // 0
		si >>>= si; // 0
		si >>>= getInt(); // 0
		si >>>= a; // 1
		si >>>= s; // 0
		si >>>= "2"; // 0
		si >>>= r; //1
		si >>>= getRec(); //1
		
		s >>>= 2; //0
		a >>>= 2; //1
		r >>>= 2; //1
	end
	
	function funcIn(i int in) returns(int)
	end
	function funcInout(i int inout) returns(smallint)
	end
	function getString() returns(string)
	end
	function getInt() returns(int)
	end
	function getSmallInt() returns(smallint)
	end
	function getRec() returns(bitrec)
	end
end

record bitrec
	i int;
end