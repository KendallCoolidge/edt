/*******************************************************************************
 * Copyright Â© 2013 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
import eglx.rest.*;
import eglx.http.*;


library myinter
	function interfunc() returns (int){@Resource{}, @EglService{}}
	end
end

service myserv

	
	function srvFunc() returns (int)
	end
end

service myserv2	
	i int;
	function testRemoteCallsToService()
		//test remote call to the same service
		call myserv.srvfunc(); //1 The call statement must specify a "returning to" or "returns" function.
		call myserv.srvfunc(); //1  The call statement must specify a "returning to" or "returns" function.
		
		call myserv.srvfunc() //1 The specified using clause type 'string(12)' is not compatible with the expected type eglx.http.IHttp.
				using "binding:fred"  
					returning to callback; 
					
		call myserv.srvfunc() //1 The specified using clause type 'any' is not compatible with the expected type eglx.http.IHttp.
				 using Resources.getResource( "binding:fred") 
				 	returning to callback; 
		

		call myserv.srvfunc()
				 using Resources.getResource( "binding:fred") as IHTTP //0
				 	returning to callback; 
		
		call myserv.srvfunc() returns(i); //0
		
		call myserv.srvfunc() returning to callback; //0
		call myserv.srvfunc() returning to callback; //0
	end


	function testRemoteCallsToInterface()
		//test remote call to the same service
		call myinter.interfunc(); //1 The call statement must specify a "returning to" or "returns" function.
		call myinter.interfunc(); //1  The call statement must specify a "returning to" or "returns" function.
		
		call myinter.interfunc() //1 The specified using clause type 'string(12)' is not compatible with the expected type eglx.http.IHttp.
				using "binding:fred"  
					returning to callback; 
					
		call myinter.interfunc()//1 The specified using clause type 'any' is not compatible with the expected type eglx.http.IHttp.
				 using Resources.getResource( "binding:fred") 
				 	returning to callback; 
		

		call myinter.interfunc()
				 using Resources.getResource( "binding:fred") as IHTTP //0
				 	returning to callback; 
		
		call myinter.interfunc() returns(i); //0
		
		call myinter.interfunc() returning to callback; //0
		call myinter.interfunc() returning to callback; //0
	end
	
	
	function callback(p1 int in)
	end
end


library RemoteFunctionCallTests
	

	i int;
	
	function srvFunc() returns (int)
	end
	
	function testRemoteCallsToService()
		//test remote call to the same service
		call myserv.srvfunc(); //1 The call statement must specify a "returning to" or "returns" function
		call myserv.srvfunc(); //1  The call statement must specify a "returning to" or "returns" function
		
		call myserv.srvfunc() //1 The specified using clause type 'string(12)' is not compatible with the expected type eglx.http.IHttp.
				using "binding:fred"  
					returning to callback; 
					
		call myserv.srvfunc() //1 The specified using clause type 'any' is not compatible with the expected type eglx.http.IHttp.
				 using Resources.getResource( "binding:fred") 
				 	returning to callback; 
		

		call myserv.srvfunc()
				 using Resources.getResource( "binding:fred") as IHTTP //0
				 	returning to callback; 
		
		call myserv.srvfunc() returns(i); //0
		
		call myserv.srvfunc() returning to callback; //0
		call myserv.srvfunc() returning to callback; //0
	end


	function testRemoteCallsToInterface()
		//test remote call to the same service
		call myinter.interfunc(); //1 The call statement must specify a "returning to" or "returns" function.
		call myinter.interfunc(); //1  The call statement must specify a "returning to" or "returns" function.
		
		call myinter.interfunc() //1 The specified using clause type 'string(12)' is not compatible with the expected type eglx.http.IHttp.
				using "binding:fred" 
					returning to callback; 
					
		call myinter.interfunc()//1 The specified using clause type 'any' is not compatible with the expected type eglx.http.IHttp.
				 using Resources.getResource( "binding:fred") 
				 	returning to callback; 
		

		call myinter.interfunc()
				 using Resources.getResource( "binding:fred") as IHTTP //0
				 	returning to callback; 
		
		call myinter.interfunc() returns(i); //0
		
		call myinter.interfunc() returning to callback; //0
		call myinter.interfunc() returning to callback; //0
		call myinter.interfunc() returning to callback2 onexception exp2; //0

		call myinter.interfunc() returning to callback3; //0
		call myinter.interfunc() returning to callback2 onexception exp3; //0

		call myinter.interfunc() returning to callback4; //0
		call myinter.interfunc() returning to callback2 onexception exp4; //0

		call myinter.interfunc() returning to callback5; //0
		call myinter.interfunc() returning to callback2 onexception exp5; //0
	end
	
	
	function callback(p1 int in)
	end
	function callback2(p1 int in, http IHttp in)
	end
	function exp2(p1 AnException in, http IHttp in)
	end
	
	function callback3(p1 int, http IHttp in)
	end
	function exp3(p1 AnException, http IHttp in)
	end
	
	function callback4(p1 int in, http IHttp)
	end
	function exp4(p1 AnException in, http IHttp)
	end
	
	function callback5(p1 int in, http string in)
	end
	function exp5(p1 AnException in, http string in)
	end
end
