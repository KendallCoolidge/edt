interface myinter
	function interfunc() returns (int);
end

service myserv

	servVar myserv?;
	interVar myinter?;
	
	i int;
	
	function srvFunc() returns (int)
	end
	
	function testRemoteCallsToService()
		//test remote call to the same service
		call myserv.srvfunc(); //1 must specify a "returning to" function
		call servVar.srvfunc(); //1  must specify a "returning to" function
		
		call myserv.srvfunc() 
				using "binding:fred"  //1 type of the using expression must be eglx.http.IHTTP
					returning to callback; 
					
		call myserv.srvfunc()
				 using syslib.getResource( "binding:fred") //1 type of the using expression must be eglx.http.IHTTP
				 	returning to callback; 
		

		call myserv.srvfunc()
				 using syslib.getResource( "binding:fred") as IHTTP //0
				 	returning to callback; 
		
		call myserv.srvfunc() returns(i); //1  must specify a "returning to" function
		
		call myserv.srvfunc() returning to callback; //0
		call servVar.srvfunc() returning to callback; //0
	end


	function testRemoteCallsToInterface()
		//test remote call to the same service
		call myinter.interfunc(); //1 must specify a "returning to" function
		call intervar.interfunc(); //1  must specify a "returning to" function
		
		call myinter.interfunc() 
				using "binding:fred"  //1 type of the using expression must be eglx.http.IHTTP
					returning to callback; 
					
		call myinter.interfunc()
				 using syslib.getResource( "binding:fred") //1 type of the using expression must be eglx.http.IHTTP
				 	returning to callback; 
		

		call myinter.interfunc()
				 using syslib.getResource( "binding:fred") as IHTTP //0
				 	returning to callback; 
		
		call myinter.interfunc() returns(i); //1  must specify a "returning to" function
		
		call myinter.interfunc() returning to callback; //0
		call intervar.interfunc() returning to callback; //0
	end
	
	
	function callback(p1 int in)
	end
end


library RemoteFunctionCallTests
	

	servVar myserv?;
	interVar myinter?;
	
	i int;
	
	function srvFunc() returns (int)
	end
	
	function testRemoteCallsToService()
		//test remote call to the same service
		call myserv.srvfunc(); //1 must specify a "returning to" function
		call servVar.srvfunc(); //1  must specify a "returning to" function
		
		call myserv.srvfunc() 
				using "binding:fred"  //1 type of the using expression must be eglx.http.IHTTP
					returning to callback; 
					
		call myserv.srvfunc()
				 using syslib.getResource( "binding:fred") //1 type of the using expression must be eglx.http.IHTTP
				 	returning to callback; 
		

		call myserv.srvfunc()
				 using syslib.getResource( "binding:fred") as IHTTP //0
				 	returning to callback; 
		
		call myserv.srvfunc() returns(i); //1  must specify a "returning to" function
		
		call myserv.srvfunc() returning to callback; //0
		call servVar.srvfunc() returning to callback; //0
	end


	function testRemoteCallsToInterface()
		//test remote call to the same service
		call myinter.interfunc(); //1 must specify a "returning to" function
		call intervar.interfunc(); //1  must specify a "returning to" function
		
		call myinter.interfunc() 
				using "binding:fred"  //1 type of the using expression must be eglx.http.IHTTP
					returning to callback; 
					
		call myinter.interfunc()
				 using syslib.getResource( "binding:fred") //1 type of the using expression must be eglx.http.IHTTP
				 	returning to callback; 
		

		call myinter.interfunc()
				 using syslib.getResource( "binding:fred") as IHTTP //0
				 	returning to callback; 
		
		call myinter.interfunc() returns(i); //1  must specify a "returning to" function
		
		call myinter.interfunc() returning to callback; //0
		call intervar.interfunc() returning to callback; //0
	end
	
	
	function callback(p1 int in)
	end
end
