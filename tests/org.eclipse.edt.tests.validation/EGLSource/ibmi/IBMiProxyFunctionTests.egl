import eglx.jtopen.annotations.*;
import eglx.java.*;
interface inter1
	function f1()
		{@IBMiProgram {}}; //1 container for the IBMiProgram function f1 is invalid
end

externaltype et1 type JavaObject
	function f1()
		{@IBMiProgram {}}; //1 container for the IBMiProgram function f1 is invalid
end

record noerr
	f1 smallint {@Structbin1}; //0
	f2 smallint {@Structbin2}; //0
	f3 smallint {@Structunsignedbin1}; //0
	f4 int {@Structbin4}; //0
	f5 int {@Structunsignedbin2}; //0
	f6 bigint {@Structbin8}; //0
	f7 bigint {@Structunsignedbin4}; //0
	f8 decimal(20) {@Structunsignedbin8}; //0
	f9 date {@Structdate}; //0
	fa timestamp("yyyy") {@Structtimestamp}; //0
	fb timestamp {@Structtimestamp{eglPattern = "yyyy"}}  = ""; //0
	fc smallfloat {@Structfloat4}; //0
	fd float {@Structfloat8{}}; //0
	fe decimal(10) {@StructdecFloat{}}; //0
	ff decimal(10) {@Structpackeddecimal{}}; //0
	fg decimal(10) {@Structzoneddecimal{}};  //0
	fh decimal {@StructdecFloat{length = 3}} = 0;  //0
	fi decimal {@Structpackeddecimal{length = 3, decimals = 2}} = 0; //0
	fj decimal {@Structzoneddecimal{length = 3, decimals = 2}} = 0;  //0
	fk string {@Structtext{length = 3}};
	fl int[] {@Structarray};  //0
	fm int[] {@Structarray{returnCountVariable = f1}}; //0
	fn string[] {@Structarray{elementTypeAnnotation = @Structtext{length = 3}}}; //0
end

record err
	f1 smallint {@Structbin4}; //1 not compatible with the type
	f2 smallint? {@Structbin2}; //1 not valid for use with the nullable type
	f3 smallint {@Structtext}; //1 not compatible with the type
	f4 int {@Structbin2}; //1 not compatible with the type
	f5 int {@Structbin8}; //1 not compatible with the type
	f6 bigint {@Structbin2}; //1 not compatible with the type
	f7 bigint {@Structdate}; //1 not compatible with the type
	f8 decimal(19) {@Structunsignedbin8}; //1 not compatible with the type
	f9 date {@Structtimestamp}; //1 not compatible with the type
	fa timestamp("yyyy") {@Structdate}; //1 not compatible with the type
	fb timestamp {@Structtimestamp{eglPattern = "yyddd"}}  = ""; //1 Invalid pattern
	fba timestamp {@Structtimestamp{}}  = ""; //1 eglPattern must be specified
	fc smallfloat {@Structfloat8}; //1 not compatible with the type
	fd float {@Structfloat4{}}; //1 not compatible with the type
	fe decimal(10) {@StructdecFloat{length = 3}}; //1 length is not allowed
	ff decimal(10) {@Structpackeddecimal{decimals = 2}}; //1 decimals is not allowed
	fg decimal(10) {@Structzoneddecimal{length = 3, decimals = 2}};  //2
	fh decimal {@StructdecFloat{length = -3}} = 0;  //1 must be an integer
	fi decimal {@Structpackeddecimal{length = 3, decimals = 4}} = 0; //1 must be an integer
	fj decimal {@Structzoneddecimal{length = 33, decimals = 2}} = 0;  //1 must be an integer
	fha decimal {@StructdecFloat{}} = 0;  //1 length must be specified
	fib decimal {@Structpackeddecimal{}} = 0; //2
	fjc decimal {@Structzoneddecimal{}} = 0;  //2
	fk string {@Structtext{length = -3}}; //1 must be an integer
	fka string {@Structtext{}}; //1 length must be specified
	fl boolean[] {@Structarray};  //1 is not compatible
	fla int?[] {@Structarray{}};  //1 not valid for use with the nullable type
	fm int[] {@Structarray{returnCountVariable = fa}}; //1 must have a type that is assignment compatible
	fn string[] {@Structarray{elementTypeAnnotation = @Structtext{}}}; //1 length must be specified
end


record rec1
	field1 boolean;
	field2 int?;
	field3 int?[];
	field4 string;
end

program pgm1 {}
	function main()
	end
	
	function f1(p1 decimal)
			{@IBMiProgram{
				parameterAnnotations = []  //1 must exactly match the number of parameters
			}}
	end

	function f2(p1 int)
			{@IBMiProgram{
				parameterAnnotations = ["fred"]  //1 value specified for the parameterAnnotations 
			}}
	end

	function f3(p1 int)
			{@IBMiProgram{}}
		a int;   //1 cannot contain statements.
	end
	
	function f4() returns (int)  //1 cannot return a value
		{@IBMiProgram{}}
	end
	
	function f5() returns (string)  //1 only valid return type is INT
		{@IBMiProgram{isServiceProgram = yes}}
	end
	
	function f6(
		p1 int?)
		{@IBMiProgram{}} //1 nullable type int? is not supported
	end

	function f7(
		p2 int?[])
		{@IBMiProgram{}} //1 array of nullable types int?[] is not supported
	end
	
	
	function f8 ( p1 string)
		{@IBMiProgram{}}  //1 entry in the array of IBMiProgramParameterAnnotations is required
	end

	function f9 ( p1 boolean)
		{@IBMiProgram{}}  //1 type of parameter p1 is not supported
	end

	function f10 (p1 rec1) 
		{@IBMiProgram{}}  //4
	end
	
	function f11(p1 string, p2 string(10))
			{@IBMiProgram{
				parameterAnnotations = [@StructText{Length = 20}]  //1 must exactly match the number of parameters
			}}
	end

end

