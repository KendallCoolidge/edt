/*******************************************************************************
 * Copyright Â© 2012 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * IBM Corporation - initial API and implementation
 *
 *******************************************************************************/
package org.eclipse.edt.eunit.runtime;

/**
  * this library is responsible to persist the test result
  * 
 **/
Library WriteResultLib
	//persist the test result
	trHandler CreateResultFile = new CreateResultFile;
	
	private currentTime String? = null;
	
	function writeResult(s Status in, ms MultiStatus in, outR Log in, td TestDescription in, resultRootSum ResultSummaryRoot)
		tr TestResult;
		tr.stat = s;
		tr.log = outR;
		tr.td = td; 
				
		persistResult(tr, ms, resultRootSum);
	end

	function persistResultRootSummary(resultRootSum ResultSummaryRoot)
		xmlStr String = XMLLib.convertToXML(resultRootSum, true);
		SysLib.writeStdOut(xmlStr);
		
		fileSeparator String? = SysLib.getProperty("file.separator");
		if(fileSeparator == null || fileSeparator == "")
			fileSeparator = "/";
		end
		etrRoot String = getResultRootDirectory(fileSeparator);
		
		trsFilePath String = etrRoot;
		
		trsFileName String = trsFilePath + fileSeparator;
		trsFileName += "ResultSummary.trs";
		
		trHandler.createFile(trsFilePath, trsFileName, xmlStr);		
	end

	function persistResult(tr TestResult in, ms MultiStatus in, resultRootSum ResultSummaryRoot)
		//append the test case summary to result root summary 
		resultSum ResultSummary;
		resultSum.name = tr.td.name;
		resultSum.pkgName = tr.td.pkgName;
		resultSum.code = tr.stat.code;
		resultSum.tCnt = ms.testCnt;
		resultSum.expCnt = ms.expectedCnt;
		resultSum.passCnt = ms.passedCnt;
		resultSum.failCnt = ms.failedCnt;
		resultSum.errCnt = ms.errCnt;
		resultSum.badCnt = ms.badCnt;
		resultSum.skipCnt = ms.notRunCnt;		
		resultRootSum.trSum ::= resultSum;
				
		xmlStr String = XMLLib.convertToXML(tr, true);
		SysLib.writeStdOut(xmlStr);
		
		//get the result output root from properties file	
		fileSeparator String? = SysLib.getProperty("file.separator");
		if(fileSeparator == null || fileSeparator == "")
			fileSeparator = "/";
		end		
		etrRoot String = getResultRootDirectory(fileSeparator);
		
		// partPkgName String = tr.td.pkgName.replaceStr(".", fileSeparator);		
		partPkgName String = tr.td.pkgName;
		partPkgDirName String = "";
		charLen int = strLib.characterLen(partPkgName);
		for (i int from 1 to charLen by 1)
			if(partPkgName[i:i] == ".")
				partPkgDirName += fileSeparator;
			else
				partPkgDirName += partPkgName[i:i];
			end
		end
		
		//build the file path name
		etrFilePath String = etrRoot + fileSeparator;
		etrFilePath += partPkgDirName;
				
		etrFileName String = etrFilePath;
		etrFileName += fileSeparator;
		etrFileName += tr.td.name;
		etrFileName += ".etr";

		trHandler.createFile(etrFilePath, etrFileName, xmlStr);		

	end

	private function getResultRootDirectory(fileSeparator String in) returns (String)
		//get the result output root from properties file
		etrRoot String = SysLib.getProperty("EGLTestResultRoot");	
		SysLib.writeStdOut("custom properties EGLTestResultRoot is: " + etrRoot);
		etrRoot += fileSeparator;
		etrRoot += getTimeStamp();
		return (etrRoot);
	end
	
	private function getTimeStamp() returns (String)
		if(currentTime == null || currentTime == "")
			format String = "yyyyMMdd_HHmmss";
			myTime TimeStamp("yyyyMMddHHmmss");
			currentTime = strLib.formatTimestamp(myTime, format);				
		end
		
		//SysLib.writeStdOut ("c: "+ currentTime);
		return (currentTime);
	end
end
