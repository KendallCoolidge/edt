###############################################################################
# Copyright © 2008, 2012 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
# IBM Corporation - initial API and implementation
#
###############################################################################
#NLS_ENCODING=UTF-8
#NLS_MESSAGEFORMAT_VAR
After_colon_ = After colon :
After_comma = After comma ,
After_opening_brace_ = After opening brace {
After_opening_bracket_ = After opening bracket [
After_opening_parenthesis_ = After opening parenthesis (
After_operator = After operator
All_Lower_Case = All Lower Case
All_Upper_Case = All Upper Case
Arguments = Arguments
Arguments_list = Arguments list
Array = Array
Array_element_list = Array element list
Assignment = Assignment
Before_EGL_part_declaration = Before EGL part declaration:
Before_closing_brace_ = Before closing brace }
Before_closing_bracket_ = Before closing bracket ]
Before_closing_parenthesis_ = Before closing parenthesis )
Before_colon_ = Before colon :
Before_comma = Before comma ,
Before_data_declaration = Before data declaration:
Before_import_declaration = Before import declaration:
Before_nested_form = Before nested form:
Before_nested_function = Before nested function:
Before_opening_brace_ = Before opening brace {
Before_opening_bracket_ = Before opening bracket [
Before_opening_parenthesis_ = Before opening parenthesis (
Before_operator = Before operator
Before_package_declaration = Before package declaration:
Before_question_mark = Before question mark
Before_semicolon = Before semicolon
Binary = Binary
Binary_expression = Binary expression
Blank_Lines = Blank Lines
Blank_lines_in_EGL_file = Blank lines in EGL file
Blank_lines_within_EGL_part_declarations = Blank lines within EGL part declarations
Brace_ = Brace {}
Braces = Braces
Bracket_ = Bracket []
Case_statement = Case statement
Case_statement_when_clause = Case statement when clause
Call_statement = Call statement
Colon = Colon
Comma = Comma
Data = Data
Data_declarations_class_and_local = Data declarations (class and local)
Default_number_of_indentations_for_wrapped_lines = Default number of indentation(s) for wrapped lines:
Do_not_change = Do not change
EGL_Preferred_Case = EGL Preferred Case
EGL_keywords_case_policy = EGL keywords case policy:
EGL_keywords_cases = EGL keywords cases
EGL_language = EGL language
Enumeration_fields = Enumeration fields
Existing_blank_lines = Existing blank lines
Exit_statement = Exit statement
Expressions_list = Expressions list
For = For
For_statement = For statement
Foreach = ForEach
Function_Invocation = Function Invocation
Function_parameters = Function parameters
General_Settings = General Settings
Get_by_position = Get by position
If = If
IO_statement = I/O statement
Implements_clause = Implements clause
Indentation = Indentation
Indentation_Size = Indentation Size
Initialization_expression = Initialization expression
Label_statement = Label statement
Line_Wrapping = Line Wrapping
Line_width_and_indentation_levels = Line width and indentation levels
Maximum_line_width = Maximum line width:
Move_statement = Move statement
New_expression = New expression
Next_line = Next line
Next_line_indented = Next line indented
No_wrap = No wrap
Nullable_type = Nullable type
Number_of_blank_lines_to_preserve = Number of blank lines to preserve:
Numeric_primitives = Numeric primitives
Try_onException_block= Try onException block
OpenUI_onEvent_block = OpenUI onEvent block
Open_curly_braces_position = Open curly braces position
Operator = Operator
Parameters_function_and_program = Parameters (function and program)
Parenthesis_ = Parenthesis ()
Parenthesized_expression = Parenthesized expression
Primitives__char_numeric_time_interval = Primitives - char, numeric, time, interval
Program_parameters = Program parameters
Property_settings = Property settings
Question_mark = Question mark
Return = Return
Same_line = Same line
Semicolon = Semicolon
Set_statement = Set statement
Setting_for_wrapping_policy = Setting for wrapping policy:
Sort_by_EGL_syntax_element = Sort by EGL syntax element
Sort_by_white_space_position = Sort by white space position
Spaces_only = Spaces only
Statements = Statements
Sub_string_access = Sub string access
Tab_policy = Tab policy:
Tabs_only = Tabs only
Unary___ = Unary + - !
Use_statement = Use statement
Variable_declarations = Variable declarations
View_by_ = View by: 
When_clause = When clause
While = While
White_Space = White Space
Wrap_each_element_per_lineforce_split = Wrap each element per line(force split)
Wrap_each_element_per_linewhen_necessary = Wrap each element per line(when necessary)
Wrap_only_when_necessary = Wrap only when necessary
Wrapping_policy = Wrapping policy
