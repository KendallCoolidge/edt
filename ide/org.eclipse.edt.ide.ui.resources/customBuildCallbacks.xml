<!-- ===================================================================== -->
<!-- Custom targets called from a project's generated build.xml            -->
<!-- Set customBuildCallbacks=<path/to/this/file> in your build.properties.-->
<!-- ===================================================================== -->
<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="This file must be called with explicit targets" />
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target build.jars                              -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="pre.build.jars">
		
		<!-- These tasks create zips containing the three widget projects from the latest code in CVS. -->

		<!-- Update these properties when the version numbers change. -->
		<property name="edtVersion" value="0.7.0"/>
		<property name="dojoVersion" value="1.6.1"/>
		
		<!-- Check out the projects into a temporary directory. -->
		<mkdir dir="${build.result.folder}/widgetzips"/>
		<cvs cvsRoot=":pserver:anonymous@dev.eclipse.org:/cvsroot/tools"
			dest="${build.result.folder}/widgetzips"
			package="org.eclipse.edt/widgets/org.eclipse.edt.rui.dojo_${edtVersion} org.eclipse.edt/widgets/org.eclipse.edt.rui.dojo.remote_${edtVersion} org.eclipse.edt/widgets/org.eclipse.edt.rui.dojo.runtime.local_${dojoVersion} org.eclipse.edt/widgets/org.eclipse.edt.rui.dojo.runtime.remote_${dojoVersion} org.eclipse.edt/widgets/org.eclipse.edt.rui.dojo.widgets_${edtVersion} org.eclipse.edt/widgets/org.eclipse.edt.rui.widgets_${edtVersion}"/>

		<!-- Store the root of the extracted projects in a property. -->
		<property name="widgetsBaseDir" value="${build.result.folder}/widgetzips/org.eclipse.edt/widgets"/>

		<!-- Make org.eclipse.edt.rui.widgets_${edtVersion}.zip -->
		<zip destfile="org.eclipse.edt.ide.ui.rui/org.eclipse.edt.rui.widgets_${edtVersion}.zip"
			basedir="${widgetsBaseDir}" 
			includes="org.eclipse.edt.rui.widgets_${edtVersion}/**"/>
		
		<!-- To create the other two zips, we copy files into their directories then zip them up. -->
		<property name="dojoDir" value="${widgetsBaseDir}/org.eclipse.edt.rui.dojo_${edtVersion}"/>
		<property name="dojoRemoteDir" value="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.remote_${edtVersion}"/>
		<copy todir="${dojoDir}/EGLSource" overwrite="true">
			<fileset dir="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.widgets_${edtVersion}/EGLSource" excludes="**/*.egldd"/>
		</copy>
		<copy todir="${dojoRemoteDir}/EGLSource" overwrite="true">
			<fileset dir="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.widgets_${edtVersion}/EGLSource" excludes="**/*.egldd"/>
		</copy>
		<copy todir="${dojoDir}/icons" overwrite="true">
			<fileset dir="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.widgets_${edtVersion}/icons"/>
		</copy>
		<copy todir="${dojoRemoteDir}/icons" overwrite="true">
			<fileset dir="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.widgets_${edtVersion}/icons"/>
		</copy>
		<copy todir="${dojoDir}/WebContent" overwrite="true">
			<fileset dir="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.widgets_${edtVersion}/WebContent"/>
		</copy>
		<copy todir="${dojoRemoteDir}/WebContent" overwrite="true">
			<fileset dir="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.widgets_${edtVersion}/WebContent"/>
		</copy>
		<copy todir="${dojoDir}/WebContent" overwrite="true">
			<fileset dir="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.runtime.local_${dojoVersion}/WebContent"/>
		</copy>
		<copy todir="${dojoRemoteDir}/WebContent" overwrite="true">
			<fileset dir="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.runtime.remote_${dojoVersion}/WebContent"/>
		</copy>
		<zip destfile="org.eclipse.edt.ide.ui.rui/org.eclipse.edt.rui.dojo_${edtVersion}.zip"
			basedir="${widgetsBaseDir}"
			includes="org.eclipse.edt.rui.dojo_${edtVersion}/**"/>
		<zip destfile="org.eclipse.edt.ide.ui.rui/org.eclipse.edt.rui.dojo.remote_${edtVersion}.zip"
			basedir="${widgetsBaseDir}"
			includes="org.eclipse.edt.rui.dojo.remote_${edtVersion}/**"/>

		<!-- Delete the temporary directory. -->
		<delete dir="${build.result.folder}/widgetzips"/>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target build.jars                               -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="post.build.jars">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target build.sources                           -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="pre.build.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target build.sources                            -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="post.build.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the compilation target <name>                      -->
	<!-- Substitute "name" with the name of the compilation target, eg @dot    -->
	<!-- Available parameters :                                                -->
	<!--   source.foldern : n = 1 ... N, the source folders                    -->
	<!--   target.folder  : where the results of the compilation go            -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="pre.name">
	</target>

	<target name="pre.@dot">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do during the compilation target <name>, after the compile   -->
	<!-- but before jaring.  Substitute "name" with the name of the compilation-->
	<!-- target, eg @dot                                                       -->
	<!-- Available parameters :                                                -->
	<!--   source.foldern : n = 1 ... N, the source folders                    -->
	<!--   target.folder  : where the results of the compilation go            -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="post.compile.name">
	</target>

	<target name="post.compile.@dot">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do after the compilation target <name>                       -->
	<!-- Substitute "name" with the name of the compilation target, eg @dot    -->
	<!-- Available parameters :                                                -->
	<!--   jar.Location - the location of the compilation results              -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="post.name">
	</target>

	<target name="post.@dot">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.bin.parts                         -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder containing the build results           -->
	<!--   target.folder - destination folder                                  -->
	<!-- ===================================================================== -->
	<target name="pre.gather.bin.parts">
	</target>
		
	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.bin.parts                         -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder containing the build results           -->
	<!--   target.folder - destination folder                                  -->
	<!-- ===================================================================== -->
	<target name="post.gather.bin.parts">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.sources                          -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="pre.gather.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.sources                           -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="post.gather.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.logs                             -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="pre.gather.logs">        
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.logs                              -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="post.gather.logs">       
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the target clean                                   -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="pre.clean">              
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target clean                                    -->
	<!-- Available parameters :                                                -->
	<!--   plugin.destination - final destination of the build                 -->
	<!--   build.result.folder - results of the compilation                    -->
	<!--   temp.folder - temporary folder                                      -->
	<!-- ===================================================================== -->
	<target name="post.clean">             
	</target>
</project>
