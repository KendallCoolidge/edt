<!-- ===================================================================== -->
<!-- Custom targets called from a project's generated build.xml            -->
<!-- Set customBuildCallbacks=<path/to/this/file> in your build.properties.-->
<!-- ===================================================================== -->
<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="This file must be called with explicit targets" />
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target build.jars                              -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="pre.build.jars">
		
		<!-- These tasks create zips containing the three widget projects from the latest code in Git. -->

		<!-- Update these properties when the version numbers change. -->
		<property name="edtVersion" value="0.8.1"/>
		<property name="dojoVersion" value="1.7.1"/>
		
		<!-- Create a temporary directory to work in. -->
		<property name="widgetsBaseDir" value="${build.result.folder}/widgetzips"/>
		<mkdir dir="${widgetsBaseDir}"/>

		<!-- Put the location of the widgets into a property. -->
		<property name="widgetsSourceDir" value="${writableBuildRoot}/../widgets"/>

		<!-- Copy the widgets project to a new project named org.eclipse.edt.rui.widgets_${edtVersion} -->
		<property name="ruiDir" value="${widgetsBaseDir}/org.eclipse.edt.rui.widgets_${edtVersion}"/>
		<copy todir="${ruiDir}" overwrite="true">
			<fileset dir="${widgetsSourceDir}/org.eclipse.edt.rui.widgets/"/>
		</copy>
		
		<!-- Update .project file for org.eclipse.edt.rui.widgets to include a version number -->
		<replace file="${ruiDir}/.project" encoding="UTF-8" token="&lt;name&gt;org.eclipse.edt.rui.widgets&lt;/name&gt;" value="&lt;name&gt;org.eclipse.edt.rui.widgets_${edtVersion}&lt;/name&gt;"/>
	
		<!-- Make org.eclipse.edt.rui.widgets_${edtVersion}.zip -->
		<zip destfile="org.eclipse.edt.ide.ui.rui/org.eclipse.edt.rui.widgets_${edtVersion}.zip"
			basedir="${widgetsBaseDir}" 
			includes="org.eclipse.edt.rui.widgets_${edtVersion}/**"/>
		
		<!-- To create the other two zips, we copy files into their directories then zip them up. -->
		<property name="dojoDir" value="${widgetsBaseDir}/org.eclipse.edt.rui.dojo_${edtVersion}"/>
		<property name="dojoRemoteDir" value="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.remote_${edtVersion}"/>
		<copy todir="${dojoDir}" overwrite="true">
			<fileset dir="${widgetsSourceDir}/org.eclipse.edt.rui.dojo.widgets"/>
		</copy>
		<copy todir="${dojoRemoteDir}" overwrite="true">
			<fileset dir="${widgetsSourceDir}/org.eclipse.edt.rui.dojo.widgets"/>
		</copy>
		<copy todir="${dojoDir}/WebContent" overwrite="true">
			<fileset dir="${widgetsSourceDir}/org.eclipse.edt.rui.dojo.runtime.local/WebContent">
				<exclude name="**/dojo/dojo.js.uncompressed.js"/>
			</fileset>
		</copy>
		<copy todir="${dojoRemoteDir}/WebContent" overwrite="true">
			<fileset dir="${widgetsSourceDir}/org.eclipse.edt.rui.dojo.runtime.remote/WebContent"/>
		</copy>
		
		<!-- Update .project file for org.eclipse.edt.rui.dojo to include a version number -->
		<replace file="${dojoDir}/.project" encoding="UTF-8" token="&lt;name&gt;org.eclipse.edt.rui.dojo.widgets&lt;/name&gt;" value="&lt;name&gt;org.eclipse.edt.rui.dojo_${edtVersion}&lt;/name&gt;"/>
		
		<!-- Update .project file for org.eclipse.edt.rui.dojo.remote to include a version number -->
		<replace file="${dojoRemoteDir}/.project" encoding="UTF-8" token="&lt;name&gt;org.eclipse.edt.rui.dojo.widgets&lt;/name&gt;" value="&lt;name&gt;org.eclipse.edt.rui.dojo.remote_${edtVersion}&lt;/name&gt;"/>
					
		<zip destfile="org.eclipse.edt.ide.ui.rui/org.eclipse.edt.rui.dojo_${edtVersion}.zip"
			basedir="${widgetsBaseDir}"
			includes="org.eclipse.edt.rui.dojo_${edtVersion}/**"/>
		<zip destfile="org.eclipse.edt.ide.ui.rui/org.eclipse.edt.rui.dojo.remote_${edtVersion}.zip"
			basedir="${widgetsBaseDir}"
			includes="org.eclipse.edt.rui.dojo.remote_${edtVersion}/**"/>

		<!-- Copy the widgets project to a new project named org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion} -->
		<property name="dojoMobileDir" value="${widgetsBaseDir}/org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}"/>
		<copy todir="${dojoMobileDir}" overwrite="true">
			<fileset dir="${widgetsSourceDir}/org.eclipse.edt.rui.dojo.mobile.widgets/"/>
		</copy>
		
		<!-- Update .project file for org.eclipse.edt.rui.dojo.mobile.widgets to include a version number -->
		<replace file="${dojoMobileDir}/.project" encoding="UTF-8" token="&lt;name&gt;org.eclipse.edt.rui.dojo.mobile.widgets&lt;/name&gt;" value="&lt;name&gt;org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}&lt;/name&gt;"/>
			
		<!-- Make org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}.zip -->
		<zip destfile="org.eclipse.edt.ide.ui.rui/org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}.zip"
			basedir="${widgetsBaseDir}" 
			includes="org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/.settings/** org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/EGLSource/** org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/icons/** org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/WebContent/** org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/.classpath org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/.eglPath org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/.project org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/version.txt "
			excludes="org.eclipse.edt.rui.dojo.mobile.widgets_${edtVersion}/build"/>
		
		<!-- Delete the temporary directory. -->
		<delete dir="${widgetsBaseDir}"/>

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target build.jars                               -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="post.build.jars">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target build.sources                           -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="pre.build.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target build.sources                            -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder to contain the build results           -->
	<!-- ===================================================================== -->
	<target name="post.build.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the compilation target <name>                      -->
	<!-- Substitute "name" with the name of the compilation target, eg @dot    -->
	<!-- Available parameters :                                                -->
	<!--   source.foldern : n = 1 ... N, the source folders                    -->
	<!--   target.folder  : where the results of the compilation go            -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="pre.name">
	</target>

	<target name="pre.@dot">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do during the compilation target <name>, after the compile   -->
	<!-- but before jaring.  Substitute "name" with the name of the compilation-->
	<!-- target, eg @dot                                                       -->
	<!-- Available parameters :                                                -->
	<!--   source.foldern : n = 1 ... N, the source folders                    -->
	<!--   target.folder  : where the results of the compilation go            -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="post.compile.name">
	</target>

	<target name="post.compile.@dot">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do after the compilation target <name>                       -->
	<!-- Substitute "name" with the name of the compilation target, eg @dot    -->
	<!-- Available parameters :                                                -->
	<!--   jar.Location - the location of the compilation results              -->
	<!--   <name>.classpath : name = name of the compilation target. A         -->
	<!--                      reference to the classpath structure.            -->
	<!-- ===================================================================== -->
	<target name="post.name">
	</target>

	<target name="post.@dot">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.bin.parts                         -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder containing the build results           -->
	<!--   target.folder - destination folder                                  -->
	<!-- ===================================================================== -->
	<target name="pre.gather.bin.parts">
	</target>
		
	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.bin.parts                         -->
	<!-- Available parameters :                                                -->
	<!--   build.result.folder - folder containing the build results           -->
	<!--   target.folder - destination folder                                  -->
	<!-- ===================================================================== -->
	<target name="post.gather.bin.parts">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.sources                          -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="pre.gather.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.sources                           -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="post.gather.sources">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the target gather.logs                             -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="pre.gather.logs">        
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target gather.logs                              -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="post.gather.logs">       
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the target clean                                   -->
	<!-- Available parameters :                                                -->
	<!--   destination.temp.folder - destination folder                        -->
	<!-- ===================================================================== -->
	<target name="pre.clean">              
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the target clean                                    -->
	<!-- Available parameters :                                                -->
	<!--   plugin.destination - final destination of the build                 -->
	<!--   build.result.folder - results of the compilation                    -->
	<!--   temp.folder - temporary folder                                      -->
	<!-- ===================================================================== -->
	<target name="post.clean">             
	</target>
</project>
